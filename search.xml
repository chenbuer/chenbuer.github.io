<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>科学上网</title>
      <link href="/2024/08/27/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
      <url>/2024/08/27/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/</url>
      
        <content type="html"><![CDATA[<h3 id="一、ImmortalWRT系统及其安装"><a href="#一、ImmortalWRT系统及其安装" class="headerlink" title="一、ImmortalWRT系统及其安装"></a>一、ImmortalWRT系统及其安装</h3><p>openwrt的一个分支，有好的软件源。</p><ol><li><a href="https://firmware-selector.immortalwrt.org/">固件选择器</a><span id="more"></span></li><li><a href="https://rufus.ie/">写盘工具refus</a></li><li>安装的软件包</li></ol><ul><li>luci-theme-argon</li><li>luci-i18n-ttyd-zh-cn</li><li>上网工具（选择打开其一即可）<ul><li>luci-app-openclash</li><li>luci-i18n-passwall-zh-cn</li><li>luci-i18n-homeproxy-zh-cn</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>升级hexo</title>
      <link href="/2024/01/29/%E5%8D%87%E7%BA%A7hexo/"/>
      <url>/2024/01/29/%E5%8D%87%E7%BA%A7hexo/</url>
      
        <content type="html"><![CDATA[<h2 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h2><p><a href="https://novnan.github.io/Hexo/update_hexo/">参考</a><br>Hexo 升级比较简单，老方法 npm-check、npm-upgrade、npm-update 一键三连。按以下顺序逐步执行完成后，Hexo 版本及系统插件均会升级到最新。</p><span id="more"></span><h2 id="二、设置过程"><a href="#二、设置过程" class="headerlink" title="二、设置过程"></a>二、设置过程</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">//以下指令均在Hexo目录下操作，先定位到Hexo目录</span><br><span class="line">//查看当前版本，判断是否需要升级</span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">hexo version</span></span><br><span class="line"></span><br><span class="line">//全局升级hexo-cli</span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">npm i hexo-cli -g</span></span><br><span class="line"></span><br><span class="line">//再次查看版本，看hexo-cli是否升级成功</span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">hexo version</span></span><br><span class="line"></span><br><span class="line">//安装npm-check，若已安装可以跳过</span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">npm install -g npm-check</span></span><br><span class="line"></span><br><span class="line">//检查系统插件是否需要升级</span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">npm-check</span></span><br><span class="line"></span><br><span class="line">//安装npm-upgrade，若已安装可以跳过</span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">npm install -g npm-upgrade</span></span><br><span class="line"></span><br><span class="line">//更新package.json</span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">npm-upgrade</span></span><br><span class="line"></span><br><span class="line">//更新全局插件</span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">npm update -g</span></span><br><span class="line"></span><br><span class="line">//更新系统插件</span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">npm update --save</span></span><br><span class="line"></span><br><span class="line">//再次查看版本，判断是否升级成功</span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">hexo version</span></span><br></pre></td></tr></table></figure><p>【完毕】</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git config 文件</title>
      <link href="/2024/01/29/git%20config%20%E6%96%87%E4%BB%B6/"/>
      <url>/2024/01/29/git%20config%20%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h2><p>该文件备份本地git 配置信息</p><span id="more"></span><h2 id="二、设置过程"><a href="#二、设置过程" class="headerlink" title="二、设置过程"></a>二、设置过程</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">[user]</span><br><span class="line">email = xx@xx.com</span><br><span class="line">name = xx</span><br><span class="line">[color]</span><br><span class="line">    ui = true</span><br><span class="line">[alias]</span><br><span class="line">    lg = log --color --graph --pretty=format:&#x27;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset&#x27; --abbrev-commit</span><br><span class="line">    changes = diff --name-status -r</span><br><span class="line">    diffstat = diff --stat -r</span><br><span class="line">            whatis = show -s --pretty=&#x27;tformat:%h (%s, %ad)&#x27; --date=short</span><br><span class="line">    pwhatis = show -s --pretty=&#x27;tformat:%h, %s, %ad&#x27; --date=short</span><br><span class="line">            ci = commit</span><br><span class="line">    co = checkout</span><br><span class="line">            st = status</span><br><span class="line">    br = branch</span><br><span class="line">            df = diff</span><br><span class="line">    cp = cherry-pick</span><br><span class="line">[push]</span><br><span class="line">    default = simple</span><br><span class="line">[core]</span><br><span class="line">    editor = vim</span><br><span class="line">[merge]</span><br><span class="line">    tool = vimdiff</span><br><span class="line">[diff]</span><br><span class="line">    tool = vimdiff</span><br><span class="line">[mergetool]</span><br><span class="line">    prompt = false</span><br><span class="line">[difftool]</span><br><span class="line">    prompt = false</span><br><span class="line">[filter &quot;lfs&quot;]</span><br><span class="line">clean = git-lfs clean -- %f</span><br><span class="line">smudge = git-lfs smudge -- %f</span><br><span class="line">process = git-lfs filter-process</span><br><span class="line">required = true</span><br><span class="line">[https]</span><br><span class="line">proxy = http://127.0.0.1:6666</span><br><span class="line">[http]</span><br><span class="line">proxy = http://127.0.0.1:6666</span><br></pre></td></tr></table></figure><p>【完毕】</p>]]></content>
      
      
      <categories>
          
          <category> GIT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给github增加本地代理proxy</title>
      <link href="/2024/01/29/%E7%BB%99github%E5%A2%9E%E5%8A%A0%E6%9C%AC%E5%9C%B0%E4%BB%A3%E7%90%86proxy/"/>
      <url>/2024/01/29/%E7%BB%99github%E5%A2%9E%E5%8A%A0%E6%9C%AC%E5%9C%B0%E4%BB%A3%E7%90%86proxy/</url>
      
        <content type="html"><![CDATA[<h2 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h2><p>GitHub被block，而且proxy server是基于https的，所以直接设置ssh代理有点麻烦。所以，将ssh改成https。</p><ol><li>购买VPS，设置https的代理服务</li><li>设置本地的转发服务</li><li>设置git proxy，指向本地proxy 服务</li><li>修改本地已存在的repo，由ssh改成https<span id="more"></span></li></ol><h2 id="二、设置过程"><a href="#二、设置过程" class="headerlink" title="二、设置过程"></a>二、设置过程</h2><h3 id="2-1-购买VPS，设置https代理服务"><a href="#2-1-购买VPS，设置https代理服务" class="headerlink" title="2.1 购买VPS，设置https代理服务"></a>2.1 购买VPS，设置https代理服务</h3><p>可以参考<a href="https://github.com/chenbuer/haoel.github.io/blob/master/gost_install.ipynb">这个教程</a></p><h3 id="2-2-设置本地的转发服务"><a href="#2-2-设置本地的转发服务" class="headerlink" title="2.2 设置本地的转发服务"></a>2.2 设置本地的转发服务</h3><p>没有比较好的local https代理客户端，所以用gost监听一个端口，将git指向该端口。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gost.exe -L :6666 -F https://www.proxyServer.xyz:443?auth=base64(user:passwod)</span><br></pre></td></tr></table></figure><p>将用户名密码（user:password）进行base64编码后替换</p><h3 id="2-3-设置git-proxy，指向本地proxy-服务"><a href="#2-3-设置git-proxy，指向本地proxy-服务" class="headerlink" title="2.3 设置git proxy，指向本地proxy 服务"></a>2.3 设置git proxy，指向本地proxy 服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.proxy http://127.0.0.1:6666</span><br><span class="line"></span><br><span class="line">git config --global https.proxy https://127.0.0.1:6666</span><br><span class="line"></span><br><span class="line">git config --global --unset http.proxy</span><br><span class="line"></span><br><span class="line">git config --global --unset https.proxy</span><br></pre></td></tr></table></figure><p>修改之后用<code>git config --list</code>命令查看。</p><h3 id="2-4-修改本地已存在的repo，由ssh改成https"><a href="#2-4-修改本地已存在的repo，由ssh改成https" class="headerlink" title="2.4 修改本地已存在的repo，由ssh改成https"></a>2.4 修改本地已存在的repo，由ssh改成https</h3><p>打开本地仓库的.git文件夹，修改config文件，e.g 原来的ssh配置为</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[remote &quot;origin&quot;]</span><br><span class="line">url = git@github.com:chenbuer/chenbuer.github.io.git</span><br><span class="line">fetch = +refs/heads/*:refs/remotes/origin/*</span><br></pre></td></tr></table></figure><p>直接替换<code>url</code>，由ssh格式改成https格式</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url = https://github.com/chenbuer/chenbuer.github.io.git</span><br></pre></td></tr></table></figure><p>即可。</p><p>至此，就可以像利用ssh一样利用https去操作repo了。</p><p>【完毕】</p>]]></content>
      
      
      <categories>
          
          <category> GIT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>家</title>
      <link href="/2022/10/14/%E5%AE%B6/"/>
      <url>/2022/10/14/%E5%AE%B6/</url>
      
        <content type="html"><![CDATA[<p>十一的时候把奶奶和父母带到装修好的房子住了一宿。</p><span id="more"></span><p>奶奶老了。刚下车，车库的光照也并不明亮，往电梯的一个台阶奶奶踉跄了一下。奶奶87了，她这个年纪就怕摔倒。平时在家里，坑坑洼洼的砖泥路上她身手矫健：种菜苗、拎水、浇水全都不在话下，陌生的地方平地都能绊脚。再走路的时候，她就得牵着我或者爸爸，她的手心都出汗了。</p><p>转了趟虹悦城，她倒是挺感兴趣。抓着衣服摸摸布料，看看样式，说谁谁穿着好看；金店的售货员给她一只手带上两个戒指她笑得合不拢嘴，询问着价钱。她讲着方言，她和售货员之间语言并不通，但是她自己复述的时候却讲讲头头是道，我和老爸在旁边也被她逗得哈哈大笑。没半个下午，奶奶兴奋劲就过去了，晚上和第二天就略显疲态，回程的车上也少搭我话。</p><p>我想着给奶奶多看看几个地方，回家的时候可以跟其他老头老太吹吹牛逼。晚上牵着奶奶去隔壁小公园时，她说这辈子也没来过南京，要不是我哪里会跑到这里来。她还不知道我之前谈的对象分手了，她问起来就搪塞过去。她带着点遗憾，要是再有个小姑娘围着她转转应该会更加开心吧。</p><p>刚打开门，爸爸看着家里，他很轻声的说了一句：儿子这就算自立门户了。是啊，这么多年辛苦他们了，也让他们操心了。爸爸妈妈辛辛苦苦把家里打扫了个遍，很干净。把他们送走了，回到家里冷冷清清的。不过家里很干净，也有了家的感觉。</p>]]></content>
      
      
      <categories>
          
          <category> 风月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 风月 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内网穿透工具ngrok</title>
      <link href="/2018/07/29/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7ngrok/"/>
      <url>/2018/07/29/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7ngrok/</url>
      
        <content type="html"><![CDATA[<h3 id="一、本地映射工具"><a href="#一、本地映射工具" class="headerlink" title="一、本地映射工具"></a>一、本地映射工具</h3><p>用ngrok，<a href="https://blog.csdn.net/u011886447/article/details/73268407">操作方法</a></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>buer系统部署</title>
      <link href="/2018/07/28/buer%E7%B3%BB%E7%BB%9F%E9%83%A8%E7%BD%B2/"/>
      <url>/2018/07/28/buer%E7%B3%BB%E7%BB%9F%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h3 id="一、Nginx虚拟机"><a href="#一、Nginx虚拟机" class="headerlink" title="一、Nginx虚拟机"></a>一、Nginx虚拟机</h3><p>不再赘述，碰到一个坑就是：虚拟机配置好了，但是admin的url一直访问不了，原来是因为自己没有配置DNS的A类型域名解析。</p><span id="more"></span><h3 id="二、安装redis"><a href="#二、安装redis" class="headerlink" title="二、安装redis"></a>二、安装redis</h3><p>直接利用的yum工具安装</p><p><a href="https://www.jianshu.com/p/ebda253a8daa">参考链接</a></p><h3 id="三、安装数据库mariadb"><a href="#三、安装数据库mariadb" class="headerlink" title="三、安装数据库mariadb"></a>三、安装数据库mariadb</h3><p>直接利用yum工具安装：<code>yum install mariadb-server mariadb </code></p><p><a href="http://www.cnblogs.com/starof/p/4680083.html">参考链接</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mariadb  #启动MariaDB</span><br><span class="line">systemctl stop mariadb  #停止MariaDB</span><br><span class="line">systemctl restart mariadb  #重启MariaDB</span><br><span class="line">systemctl enable mariadb  #设置开机启动</span><br></pre></td></tr></table></figure><p>直接登录，没有密码:<code>mysql -u root -p</code></p><p>修改密码:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1. 更新 mysql 库中 user 表的字段：</span><br><span class="line">MariaDB [(none)]&gt; use mysql;  </span><br><span class="line">MariaDB [mysql]&gt; UPDATE user SET password=password(&#x27;newpassword&#x27;) WHERE user=&#x27;root&#x27;;  </span><br><span class="line">MariaDB [mysql]&gt; flush privileges;  </span><br><span class="line">MariaDB [mysql]&gt; exit;</span><br><span class="line"> </span><br><span class="line">2. 或者，使用 set 指令设置root密码：</span><br><span class="line">MariaDB [(none)]&gt; SET password for &#x27;root&#x27;@&#x27;localhost&#x27;=password(&#x27;newpassword&#x27;);  </span><br><span class="line">MariaDB [(none)]&gt; exit; </span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/asdfg6541/article/details/78866421">参考链接</a></p><h3 id="四、springboot打包之后java-jar显示：没有主清单属性"><a href="#四、springboot打包之后java-jar显示：没有主清单属性" class="headerlink" title="四、springboot打包之后java -jar显示：没有主清单属性"></a>四、springboot打包之后java -jar显示：没有主清单属性</h3><p>不应该的，原来都是OK的，想来可能是因为自己的项目把parent改成了自己的。解决方法，将plugin为<code>spring-boot-maven-plugin</code>修改添加：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>repackage<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a href="http://www.cnblogs.com/niceboat/p/6230448.html">参考</a></p><h3 id="五、启动时报错-Error-creating-bean-with-name-‘freeMarkerConfigurer’"><a href="#五、启动时报错-Error-creating-bean-with-name-‘freeMarkerConfigurer’" class="headerlink" title="五、启动时报错:Error creating bean with name ‘freeMarkerConfigurer’"></a>五、启动时报错:Error creating bean with name ‘freeMarkerConfigurer’</h3><p>看上去报错freemarker的问题，估计是我项目中自己引用了freemaker的解析包，用来自动生成代码的，冲突有问题，所以，就想在springboot中不用freemarker，毕竟我是前段后分离，<a href="https://fastfoodcoding.com/questions/1506440393799/how-to-disable-freemarker-templates-in-spring-boot">解决方法参考</a>:</p><p>applicaiton.properties中添加：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spring.freemarker.check-template-location=false</span><br></pre></td></tr></table></figure><p>APP上添加注解：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableAutoConfiguration(exclude = &#123; FreeMarkerAutoConfiguration.class &#125;)</span></span><br></pre></td></tr></table></figure><h3 id="六、命令行执行sql文件"><a href="#六、命令行执行sql文件" class="headerlink" title="六、命令行执行sql文件"></a>六、命令行执行sql文件</h3><p><a href="https://www.jianshu.com/p/43052c237bf1">参考链接</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line">use xxx;</span><br><span class="line">source path/xxx.sql</span><br></pre></td></tr></table></figure><h3 id="七、打开8080端口"><a href="#七、打开8080端口" class="headerlink" title="七、打开8080端口"></a>七、打开8080端口</h3><p><a href="https://www.jianshu.com/p/b66277ad24c2">参考文档</a></p><p>除了要在安全策略组里面打开8080，还需要设置防火墙，我是直接关闭<code>systemctl stop firewalld.service</code></p><p><strong>attention: 后来改成了利用Nginx的反向代理，就不需要打开8080端口了</strong></p><h3 id="八、Nginx部署vue项目，刷新之后是Nginx的404页面"><a href="#八、Nginx部署vue项目，刷新之后是Nginx的404页面" class="headerlink" title="八、Nginx部署vue项目，刷新之后是Nginx的404页面"></a>八、Nginx部署vue项目，刷新之后是Nginx的404页面</h3><p>在server的配置中加上如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    try_files $uri $uri/ /index.html last;</span><br><span class="line">    index index.html;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/zjcjava/article/details/78255018">参考链接</a></p><p>attention：对于java后台数据的请求利用Nginx的反向代理实现：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location /api &#123;</span><br><span class="line">    proxy_pass http://127.0.0.1:8080/api/;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="九、springboot运行一段时间之后就挂了"><a href="#九、springboot运行一段时间之后就挂了" class="headerlink" title="九、springboot运行一段时间之后就挂了"></a>九、springboot运行一段时间之后就挂了</h3><p><a href="https://blog.csdn.net/zzq900503/article/details/80577490">参考链接</a></p><p>个人估计远程的bash断了之后，对应的进行也就断了，所以用nohup命令，<a href="https://www.cnblogs.com/superjt/p/4079013.html">参见</a>。<code>nohup java -jar buer-***.jar</code></p><h3 id="十、springboot和vue整合"><a href="#十、springboot和vue整合" class="headerlink" title="十、springboot和vue整合"></a>十、springboot和vue整合</h3><p>可以Google下，还没细看，<a href="https://blog.csdn.net/u014098584/article/details/78912378">参考链接一</a></p><p><a href="https://blog.csdn.net/sinat_27639721/article/details/78229040">参考链接二</a></p><h3 id="十一、关于加载慢和动态加载的问题"><a href="#十一、关于加载慢和动态加载的问题" class="headerlink" title="十一、关于加载慢和动态加载的问题"></a>十一、关于加载慢和动态加载的问题</h3><p>Google下<code>vue 动态加载 resolve</code></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>buer系统过程中的问题</title>
      <link href="/2018/07/08/buer%E7%B3%BB%E7%BB%9F%E8%BF%87%E7%A8%8B%E4%B8%AD%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2018/07/08/buer%E7%B3%BB%E7%BB%9F%E8%BF%87%E7%A8%8B%E4%B8%AD%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h3 id="一、controller中收不到post发来参数"><a href="#一、controller中收不到post发来参数" class="headerlink" title="一、controller中收不到post发来参数"></a>一、controller中收不到post发来参数</h3><p><a href="https://blog.csdn.net/qq_35420123/article/details/80674861">参考一</a></p><p><a href="https://github.com/axios/axios/blob/master/README.md#using-applicationx-www-form-urlencoded-format">参考二</a></p><span id="more"></span><p>解决方法是用qs将参数进行stringify</p><h3 id="二、vue-router中动态添加路由"><a href="#二、vue-router中动态添加路由" class="headerlink" title="二、vue-router中动态添加路由"></a>二、vue-router中动态添加路由</h3><p>用addRoutes方法，调用该方法前后打印router.options.routes是没有用的，都没有变化，但是动态路由其实已经设置进去了。 </p><p>另外显示的地方需要在Sidebar&#x2F;index.vue下，将sidebar的route属性改成想要的值，也就是store中permission中的routers属性。</p><h3 id="三、阿里云Nginx启动之后无法访问"><a href="#三、阿里云Nginx启动之后无法访问" class="headerlink" title="三、阿里云Nginx启动之后无法访问"></a>三、阿里云Nginx启动之后无法访问</h3><ul><li><p>安装Nginx，直接用yum：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y nginx</span><br></pre></td></tr></table></figure></li><li><p>安装之后，本地curl可以访问，但是远程访问不了，应该是防火墙问题（<a href="https://blog.csdn.net/AKai66/article/details/78245470">参考链接一</a>  –  <a href="https://blog.csdn.net/u010920327/article/details/78117855">参考链接二</a>）：</p><ul><li><p>关闭firewall防火墙</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld.service #停止firewall</span><br><span class="line"></span><br><span class="line">systemctl disable firewalld.service #禁止firewall开机启动</span><br></pre></td></tr></table></figure></li><li><p>启动iptables防火墙</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">yum -y install iptables-services # 先安装</span><br><span class="line"></span><br><span class="line">编辑iptables防火墙配置文件（/etc/sysconfig/iptables），开启80端口的访问权限，在 </span><br><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp--dport 22 -j ACCEPT行的上面或者下面添加-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT</span><br><span class="line"></span><br><span class="line">systemctl restart iptables.service #最后重启防火墙使配置生效</span><br><span class="line"></span><br><span class="line">systemctl enable iptables.service #设置防火墙开机启动</span><br></pre></td></tr></table></figure></li><li><p>还是访问不了，需要在控制台上打开网络与安全中的安全组，<a href="https://www.jianshu.com/p/ec34db456c8b">修改安全组规则</a></p></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue学习</title>
      <link href="/2018/07/01/vue%E5%AD%A6%E4%B9%A0/"/>
      <url>/2018/07/01/vue%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="一、处理cookie用模块js-cookie"><a href="#一、处理cookie用模块js-cookie" class="headerlink" title="一、处理cookie用模块js-cookie"></a>一、处理cookie用模块js-cookie</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Cookies</span> <span class="keyword">from</span> <span class="string">&#x27;js-cookie&#x27;</span></span><br><span class="line"><span class="comment">// 获取到cookie中key对应的value值</span></span><br><span class="line"><span class="keyword">return</span> <span class="title class_">Cookies</span>.<span class="title function_">get</span>(<span class="string">&quot;key&quot;</span>)</span><br><span class="line"><span class="comment">// 置cookie中key对应的值为value</span></span><br><span class="line"><span class="keyword">return</span> <span class="title class_">Cookies</span>.<span class="title function_">set</span>(<span class="string">&quot;key&quot;</span>, <span class="string">&quot;value&quot;</span>)</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="二、vuex使用"><a href="#二、vuex使用" class="headerlink" title="二、vuex使用"></a>二、vuex使用</h3><h4 id="2-1-vuex中getter"><a href="#2-1-vuex中getter" class="headerlink" title="2.1 vuex中getter"></a>2.1 vuex中getter</h4><p>getter类似于vue组件中的computed计算属性</p><h4 id="2-2-故state中的值和getter中的值都可以直接当做属性使用（如state中有属性count-在getter中有属性fullName）"><a href="#2-2-故state中的值和getter中的值都可以直接当做属性使用（如state中有属性count-在getter中有属性fullName）" class="headerlink" title="2.2 故state中的值和getter中的值都可以直接当做属性使用（如state中有属性count,在getter中有属性fullName）"></a>2.2 故state中的值和getter中的值都可以直接当做属性使用（如state中有属性<code>count</code>,在getter中有属性<code>fullName</code>）</h4><ol><li>state中属性的使用方法：<br>在vue中注册了store之后，可以用如下两种方法获取到count值(在组件中放在computed中)：</li></ol><ul><li>this.$store.state.count</li><li>…mapState([‘count’])</li></ul><ol start="2"><li>state中属性的使用方法：<br>在vue中注册了store之后，可以用如下两种方法获取到fullName值(在组件中放在computed中)：</li></ol><ul><li>this.$store.getters.fullName</li><li>…mapGetter([‘fullName’])</li></ul><h4 id="2-1-vuex中mapActions和mapperMutations"><a href="#2-1-vuex中mapActions和mapperMutations" class="headerlink" title="2.1 vuex中mapActions和mapperMutations"></a>2.1 vuex中mapActions和mapperMutations</h4><p>同样，vuex也为我们封装了action和mutation方法的简便使用：mapActions和mapperMutations。在组件methods中：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">methods</span>:&#123;</span><br><span class="line">    ...<span class="title function_">mapActions</span>([<span class="string">&#x27;actionFunc&#x27;</span>]),</span><br><span class="line">    ...<span class="title function_">mapMutations</span>([<span class="string">&#x27;mutationFunc&#x27;</span>])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三、-的使用"><a href="#三、-的使用" class="headerlink" title="三、!+的使用"></a>三、<code>!+</code>的使用</h3><p><a href="https://segmentfault.com/q/1010000011710961">参考链接</a></p><p>+是让字符串变成数值类型。<br>！是求反。</p><p>要看具体字段做理解。<br>在这里应该是判断某个值是否为0</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx配置</title>
      <link href="/2018/06/19/nginx%E9%85%8D%E7%BD%AE/"/>
      <url>/2018/06/19/nginx%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h3 id="Centos下降前段文件放到了buer家目录下"><a href="#Centos下降前段文件放到了buer家目录下" class="headerlink" title="Centos下降前段文件放到了buer家目录下"></a>Centos下降前段文件放到了buer家目录下</h3><p>修改Nginx配置之后，访问报403错误，是访问权限错误。修改方法：</p><p>I solved this problem by adding user settings.</p><p>in nginx.conf</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">worker_processes 4;</span><br><span class="line">user username</span><br></pre></td></tr></table></figure><p>change the ‘username’ with linux user name.</p><span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css</title>
      <link href="/2018/06/10/css/"/>
      <url>/2018/06/10/css/</url>
      
        <content type="html"><![CDATA[<h4 id="一、伪类，不一定只对a标签，其他标签也适用"><a href="#一、伪类，不一定只对a标签，其他标签也适用" class="headerlink" title="一、伪类，不一定只对a标签，其他标签也适用"></a>一、伪类，不一定只对a标签，其他标签也适用</h4><ul><li>:link   a标签未访问状态</li><li>:visited   已访问状态</li><li>:hover    鼠标悬浮状态</li><li>:active   激活状态，比如点击了<span id="more"></span></li></ul><h4 id="二、样式继承"><a href="#二、样式继承" class="headerlink" title="二、样式继承"></a>二、样式继承</h4><p>父元素的样式，子元素可以从父元素那儿继承部分样式。如border就不可以继承</p><h4 id="三、后代选择器"><a href="#三、后代选择器" class="headerlink" title="三、后代选择器"></a>三、后代选择器</h4><p>如 <code>p a em</code> 就表示p标签中a标签中的em标签</p><h4 id="四、文字样式设计属性"><a href="#四、文字样式设计属性" class="headerlink" title="四、文字样式设计属性"></a>四、文字样式设计属性</h4><ul><li>font-family   字体</li><li>font-size     文字大小<ul><li>绝对单位<ul><li>in 英寸</li><li>cm 厘米</li><li>mm 毫米</li><li>pt 磅</li><li>pc pica，1pc&#x3D;12pt</li><li>xx-small 9px</li><li>x-small</li><li>small</li><li>medium 16px</li><li>large</li><li>x-large</li><li>xx-large 28px</li></ul></li><li>相对单位<ul><li>px 像素，受分辨率的影响</li><li>larger（相对父元素大点儿） smaller（相对父元素小点儿）</li><li><strong>em</strong> 相对于父元素字体大小的n倍</li><li>percent 相对于父元素字体大小的具体倍数</li></ul></li></ul></li><li>font-color    文字颜色</li><li>font-weight   文字粗细</li><li>font-style    文字样式</li></ul><h4 id="五、行内元素-块元素"><a href="#五、行内元素-块元素" class="headerlink" title="五、行内元素 &amp; 块元素"></a>五、行内元素 &amp; 块元素</h4><ul><li>行内元素(内联元素)，一行显示，直到这行显示满了会换行<br><em><strong>行内元素并不具有宽高设置，且垂直方向上margin和padding都是不生效的</strong></em></li></ul><p>&lt;span&gt; &lt;a&gt; &lt;em&gt;(变斜) 等</p><ul><li>块级元素，独占一行</li></ul><p>&lt;p&gt; &lt;div&gt; &lt;h1-6&gt; &lt;ul&gt; &lt;li&gt; &lt;ol&gt; &lt;dl&gt; &lt;dt&gt; &lt;dd&gt; 等</p><ul><li><p>dispaly:inline</p><p>  元素显示为内联元素，元素前后没有换行符</p></li><li><p>display:block</p><p>  元素显示为块级元素，前后有换行符</p></li><li><p>display:inline-block</p><p>  行内块元素，元素呈现为inline，具有block相应特性(width、height、padding、margin都生效)</p></li></ul><h4 id="六、背景样式"><a href="#六、背景样式" class="headerlink" title="六、背景样式"></a>六、背景样式</h4><ul><li>background-color 设置元素的背景颜色</li><li>background-img   把图像设置为背景</li><li>background-position   设置背景图像的起始位置</li><li>background-attachment 背景图像是否固定(固定住用fixed，sroll)</li><li>background-repeat     背景图像是否重复&amp;如何重复(no-repeat,repeat-x,repeat-y,repeat[默认])</li></ul><h4 id="七、盒子模型"><a href="#七、盒子模型" class="headerlink" title="七、盒子模型"></a>七、盒子模型</h4><ul><li>内边距 padding<ul><li>padding:值1 &#x2F;&#x2F; 4个方向都为值1</li><li>padding:值1 值2   &#x2F;&#x2F; 值1是上下，值2是左右</li><li>padding:值1 值2 值3   &#x2F;&#x2F; 值1是上，值2是左右，值3是下</li><li>padding:值1 值2 值3 值4 &#x2F;&#x2F;分别对应上、右、下、左</li></ul></li><li>外边距 margin<ul><li>margin可以设置为负值，但是padding不可以设置为负值</li></ul></li><li>边框 border<ul><li>border-width</li><li>border-color</li><li>border-style(none,dotted,dashed,solid,groove[3D凹槽边框]…)</li></ul></li></ul><h4 id="八、float属性"><a href="#八、float属性" class="headerlink" title="八、float属性"></a>八、float属性</h4><p>一旦给元素设置了浮动属性，元素就脱离原来的文档流；但是会正常占用文字的空间（不会覆盖文字）</p><ul><li>float:left</li><li>float:right</li><li>float:none</li><li>float:inherit</li></ul><h4 id="九、clear属性：消除浮动带来的副作用"><a href="#九、clear属性：消除浮动带来的副作用" class="headerlink" title="九、clear属性：消除浮动带来的副作用"></a>九、clear属性：消除浮动带来的副作用</h4><ul><li>clear:none</li><li>clear:left<ul><li>不允许该元素(标签)左边有浮动元素</li></ul></li><li>clear:right<ul><li>不允许右边有浮动元素</li></ul></li><li>clear:both<ul><li>左右都不允许</li></ul></li></ul><h4 id="十、三种布局方式"><a href="#十、三种布局方式" class="headerlink" title="十、三种布局方式"></a>十、三种布局方式</h4><ul><li>标准流</li><li>浮动</li><li>定位 (position)<ul><li>static(默认)</li><li>relative,用top、bottom、left、right来配合使用，发生位移</li><li>absolute,用top、bottom、left、right来配合使用，与relative相比较，位移的方向会变化，同时，脱离正常的文档流</li><li>fixed：用top、bottom、left、right来配合使用，位置不变，脱离文档流</li></ul></li></ul><h4 id="十一、有意思的css画图"><a href="#十一、有意思的css画图" class="headerlink" title="十一、有意思的css画图"></a>十一、有意思的css画图</h4><p><a href="http://www.9958.pw/post/css_tuxing">链接</a></p><p><a href="http://www.cnblogs.com/top5/archive/2012/02/14/2351959.html">或者链接，与上面内容一样</a></p><h4 id="十二、flex布局"><a href="#十二、flex布局" class="headerlink" title="十二、flex布局"></a>十二、flex布局</h4><ul><li>想要的布局居中两种方法<ul><li>方法1：容器设置两个属性   <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">justify-content</span>:space-between;<span class="comment">/* 两端对齐 */</span></span><br><span class="line"><span class="attribute">align-items</span>:center;<span class="comment">/* 在交叉轴(cross-axis)上对齐方式,多行时候用align-content属性 */</span></span><br></pre></td></tr></table></figure></li><li>方法2：容器设置属性<code>justify-content:space-between</code>,设置项目属性<code>align-self:center</code></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>webpack</title>
      <link href="/2018/06/04/webpack/"/>
      <url>/2018/06/04/webpack/</url>
      
        <content type="html"><![CDATA[<h2 id="一、webpack中文文档路径"><a href="#一、webpack中文文档路径" class="headerlink" title="一、webpack中文文档路径"></a>一、webpack中文文档路径</h2><p><a href="https://webpack.docschina.org/configuration/">webpack文档</a></p><p>该路径下还有对应vue和react和node等的中文文档</p><span id="more"></span><h2 id="二、stylus学习文档"><a href="#二、stylus学习文档" class="headerlink" title="二、stylus学习文档"></a>二、stylus学习文档</h2><p><a href="http://www.zhangxinxu.com/jq/stylus/">stylus学习文档</a></p>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shiro</title>
      <link href="/2018/05/09/shiro/"/>
      <url>/2018/05/09/shiro/</url>
      
        <content type="html"><![CDATA[<h3 id="一、关于shiro"><a href="#一、关于shiro" class="headerlink" title="一、关于shiro"></a>一、关于shiro</h3><p>一个shiro的配置案例如下：</p><span id="more"></span><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Shiro的Web过滤器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;shiroFilter&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.shiro.spring.web.ShiroFilterFactoryBean&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;securityManager&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;securityManager&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;loginUrl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;zheng.upms.sso.server.url&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;successUrl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;zheng.upms.successUrl&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;unauthorizedUrl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;zheng.upms.unauthorizedUrl&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;filters&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">util:map</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--czy:重写authc的过滤器--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;authc&quot;</span> <span class="attr">value-ref</span>=<span class="string">&quot;upmsAuthenticationFilter&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">util:map</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;filterChainDefinitions&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--czy:要是过滤器没有被重写的就是用的DefaultFilter.java中声明的过滤器--&gt;</span></span><br><span class="line">                /manage/** = upmsSessionForceLogout,authc</span><br><span class="line">                /manage/index = user</span><br><span class="line">                /druid/** = user</span><br><span class="line">                /swagger-ui.html = user</span><br><span class="line">                /resources/** = anon</span><br><span class="line">                /** = anon</span><br><span class="line">            <span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 重写authc过滤器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;upmsAuthenticationFilter&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.zheng.upms.client.shiro.filter.UpmsAuthenticationFilter&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 强制退出会话过滤器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;upmsSessionForceLogout&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.zheng.upms.client.shiro.filter.UpmsSessionForceLogoutFilter&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 安全管理器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;securityManager&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.shiro.web.mgt.DefaultWebSecurityManager&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;realms&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span><span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;upmsRealm&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sessionManager&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;sessionManager&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;rememberMeManager&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;rememberMeManager&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- realm实现，继承自AuthorizingRealm --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;upmsRealm&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.zheng.upms.client.shiro.realm.UpmsRealm&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 会话管理器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sessionManager&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.shiro.web.session.mgt.DefaultWebSessionManager&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 全局session超时时间 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;globalSessionTimeout&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;zheng.upms.session.timeout&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- sessionDAO --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sessionDAO&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;sessionDAO&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sessionIdCookieEnabled&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sessionIdCookie&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;sessionIdCookie&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sessionValidationSchedulerEnabled&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sessionListeners&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span><span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;sessionListener&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sessionFactory&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;sessionFactory&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 会话DAO，可重写，持久化session --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sessionDAO&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.zheng.upms.client.shiro.session.UpmsSessionDao&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 会话Cookie模板 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sessionIdCookie&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.shiro.web.servlet.SimpleCookie&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 不会暴露给客户端 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;httpOnly&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 设置Cookie的过期时间，秒为单位，默认-1表示关闭浏览器时过期Cookie --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxAge&quot;</span> <span class="attr">value</span>=<span class="string">&quot;-1&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Cookie名称 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;zheng.upms.session.id&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 会话监听器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sessionListener&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.zheng.upms.client.shiro.listener.UpmsSessionListener&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- session工厂 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sessionFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.zheng.upms.client.shiro.session.UpmsSessionFactory&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- rememberMe管理器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;rememberMeManager&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.shiro.web.mgt.CookieRememberMeManager&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cipherKey&quot;</span> <span class="attr">value</span>=<span class="string">&quot;#&#123;T(org.apache.shiro.codec.Base64).decode(&#x27;4AvVhmFLUs0KTA3Kprsdag==&#x27;)&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;cookie&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;rememberMeCookie&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- rememberMe缓存cookie --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;rememberMeCookie&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.shiro.web.servlet.SimpleCookie&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">value</span>=<span class="string">&quot;rememberMe&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 不会暴露给客户端 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;httpOnly&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 记住我cookie生效时间 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxAge&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;zheng.upms.rememberMe.timeout&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 设置SecurityUtils，相当于调用SecurityUtils.setSecurityManager(securityManager) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.beans.factory.config.MethodInvokingFactoryBean&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;staticMethod&quot;</span> <span class="attr">value</span>=<span class="string">&quot;org.apache.shiro.SecurityUtils.setSecurityManager&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;arguments&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;securityManager&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 开启Shiro Spring AOP权限注解@RequiresPermissions的支持 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator&quot;</span> <span class="attr">depends-on</span>=<span class="string">&quot;lifecycleBeanPostProcessor&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;securityManager&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;securityManager&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Shiro生命周期处理器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;lifecycleBeanPostProcessor&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.shiro.spring.LifecycleBeanPostProcessor&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可见， 三大模块：securityManager、Realm、subject<br>其中SecurityManager是链接的主体，讲Realm注入其中，并利用<code>Subject subject = SecurityUtils.getSubject();</code>可以获得当前的subject</p><h3 id="二、subject-login-发生了什么"><a href="#二、subject-login-发生了什么" class="headerlink" title="二、subject.login()发生了什么"></a>二、subject.login()发生了什么</h3><p><a href="http://blog.51cto.com/luchunli/1830020">参考</a></p><p>所以最终还是回归到了我们自定义的<code>doGetAuthenticationInfo(AuthenticationToken authenticationToken)</code>方法。</p><h3 id="三、权限验证"><a href="#三、权限验证" class="headerlink" title="三、权限验证"></a>三、权限验证</h3><p>(1) 可以简单书写如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> AuthenticationInfo <span class="title function_">doGetAuthenticationInfo</span><span class="params">(AuthenticationToken authcToken)</span> <span class="keyword">throws</span> AuthenticationException &#123;  </span><br><span class="line">        <span class="type">UsernamePasswordToken</span> <span class="variable">token</span> <span class="operator">=</span> (UsernamePasswordToken) authcToken;  </span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> accountManager.findUserByUserName(token.getUsername());  </span><br><span class="line">        <span class="keyword">if</span> (user != <span class="literal">null</span>) &#123;  </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">SimpleAuthenticationInfo</span>(user.getUserName(), user.getPassword(), getName());  </span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>但是这时候我们就回有一疑问：这里面都没有验证密码？这个其实是交给<code>credentialsMatcher</code>去验证的。所以我们可以自定义一个bean，其实现类继承自<code>SimpleCredentialsMatcher</code>，复写<code>doCredentialsMatch</code>方法:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyCredentialsMatcher</span> <span class="keyword">extends</span> <span class="title class_">SimpleCredentialsMatcher</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">doCredentialsMatch</span><span class="params">(AuthenticationToken token, AuthenticationInfo info)</span> &#123;</span><br><span class="line">        <span class="type">UsernamePasswordToken</span> <span class="variable">usernamePasswordToken</span> <span class="operator">=</span> (UsernamePasswordToken) token;</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> String.valueOf(usernamePasswordToken.getPassword());</span><br><span class="line">        <span class="type">String</span> <span class="variable">dbpassword</span> <span class="operator">=</span> (String) info.getCredentials();</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.equals(password, dbpassword);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://www.cnblogs.com/chyu/p/5958720.html">参考一</a>–<a href="http://jinnianshilongnian.iteye.com/blog/2022468">参考二</a></p><p>最后MyCredentialsMatcher这个bean注入自定义Realm中。</p><p>(2) 也可以不用自定义<code>MyCredentialsMatcher</code>，直接在<code>doGetAuthenticationInfo</code>把密码校验给校验了。zheng项目就是这么做的。</p><h3 id="四、realm和subject的个人理解"><a href="#四、realm和subject的个人理解" class="headerlink" title="四、realm和subject的个人理解"></a>四、realm和subject的个人理解</h3><p>realm可以理解为安全数据源。</p><p>自定义的realm，如继承自<code>AuthorizingRealm</code>，实现了<code>doGetAuthenticationInfo(AuthenticationToken authenticationToken)</code>(这个方法之后用户就获得了用户是否验证通过信息保存到subject对象中)和<code>doGetAuthorizationInfo(PrincipalCollection principalCollection)</code>(这个方法之后，就可以检查用户是否具备了某些权限保存到了subject对象中)。在业务代码中我们可以这样判断authenticate和authorization结果：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Subject</span> <span class="variable">subject</span> <span class="operator">=</span> SecurityUtils.getSubject();</span><br><span class="line">subject.hasRole(<span class="string">&quot;admin&quot;</span>);       <span class="comment">// 检查用户有没有&quot;admin&quot;这个角色</span></span><br><span class="line">subject.isAuthenticated();      <span class="comment">// 检查这个用户有没有鉴权通过</span></span><br></pre></td></tr></table></figure><p>上面理解是错误的，实际上是：</p><blockquote><p>Subject自己不会实现相应的身份验证&#x2F;授权逻辑，而是通过DelegatingSubject委托给SecurityManager实现；及可以理解为Subject是一个面门。<a href="http://jinnianshilongnian.iteye.com/blog/2022468">参考</a><br>subject的使用：</p></blockquote><ol><li>身份验证（login）</li><li>授权（hasRole*&#x2F;isPermitted<em>或checkRole</em>&#x2F;checkPermission*）</li><li>将相应的数据存储到会话（Session）</li><li>切换身份（RunAs）&#x2F;多线程身份传播</li><li>退出</li></ol><blockquote><p>1、首先调用 Subject.isPermitted*&#x2F;hasRole*接口，其会委托给 SecurityManager，而<br>SecurityManager 接着会委托给 Authorizer；</p></blockquote><blockquote><p>2、Authorizer 是真正的授权者，如果我们调用如 isPermitted(“user:view”)，其首先会<strong>通过<code>PermissionResolver</code> 把字符串转换成相应的 Permission 实例</strong>；</p></blockquote><blockquote><p>3、在进行授权之前，其会调用相应的 Realm 获取 Subject 相应的角色&#x2F;权限用于匹配传入的<br>角色&#x2F;权限；</p></blockquote><blockquote><p>4、Authorizer 会判断 Realm 的角色&#x2F;权限是否和传入的匹配，如果有多个 Realm，会委托给<br>ModularRealmAuthorizer 进行循环判断，如果匹配如 isPermitted*&#x2F;hasRole*会返回 true，否则返回 false 表示授权失败</p></blockquote><p>关于授权：<br><code>public abstract class AuthorizingRealm extends AuthenticatingRealm implements Authorizer, Initializable, PermissionResolverAware,  RolePermissionResolverAware</code>可见AuthorizingRealm实现了Authorizer，所有就有了isPermitted&#x2F;hasRole方法</p><h3 id="五、SecurityManager和SecurityUtils设置"><a href="#五、SecurityManager和SecurityUtils设置" class="headerlink" title="五、SecurityManager和SecurityUtils设置"></a>五、SecurityManager和SecurityUtils设置</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">DefaultSecurityManager</span> <span class="variable">securityManager</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DefaultSecurityManager</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.设置authenticator</span></span><br><span class="line">        <span class="type">ModularRealmAuthenticator</span> <span class="variable">authenticator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ModularRealmAuthenticator</span>();</span><br><span class="line">        authenticator.setAuthenticationStrategy(<span class="keyword">new</span> <span class="title class_">AtLeastOneSuccessfulStrategy</span>());</span><br><span class="line">        securityManager.setAuthenticator(authenticator);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.设置authorizer</span></span><br><span class="line">        <span class="type">ModularRealmAuthorizer</span> <span class="variable">authorizer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ModularRealmAuthorizer</span>();</span><br><span class="line">        authorizer.setPermissionResolver(<span class="keyword">new</span> <span class="title class_">WildcardPermissionResolver</span>());</span><br><span class="line">        securityManager.setAuthorizer(authorizer);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.设置Realm</span></span><br><span class="line">        <span class="type">DruidDataSource</span> <span class="variable">ds</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DruidDataSource</span>();</span><br><span class="line">        ds.setDriverClassName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">        ds.setUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/shiro&quot;</span>);</span><br><span class="line">        ds.setUsername(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        ds.setPassword(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">JdbcRealm</span> <span class="variable">jdbcRealm</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JdbcRealm</span>();</span><br><span class="line">        jdbcRealm.setDataSource(ds);</span><br><span class="line">        jdbcRealm.setPermissionsLookupEnabled(<span class="literal">true</span>);</span><br><span class="line">        securityManager.setRealms(Arrays.asList((Realm) jdbcRealm));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// !!!!至此，sercurityManager就设置完成了</span></span><br><span class="line">        <span class="comment">//将SecurityManager设置到SecurityUtils 方便全局使用</span></span><br><span class="line">        SecurityUtils.setSecurityManager(securityManager);</span><br><span class="line"></span><br><span class="line">        <span class="type">Subject</span> <span class="variable">subject</span> <span class="operator">=</span> SecurityUtils.getSubject();</span><br><span class="line"></span><br><span class="line">        <span class="type">UsernamePasswordToken</span> <span class="variable">token</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UsernamePasswordToken</span>(<span class="string">&quot;zhang&quot;</span>, <span class="string">&quot;123&quot;</span>);</span><br><span class="line">        subject.login(token);</span><br><span class="line"></span><br><span class="line">        Assert.assertTrue(subject.isAuthenticated());</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JAVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JAVA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zheng</title>
      <link href="/2018/04/30/zheng/"/>
      <url>/2018/04/30/zheng/</url>
      
        <content type="html"><![CDATA[<h3 id="一-zheng的启动顺序"><a href="#一-zheng的启动顺序" class="headerlink" title="一. zheng的启动顺序"></a>一. zheng的启动顺序</h3><ul><li><strong>ZhengCmsRpcServiceApplication.main</strong></li><li><strong>ZhengUpmsRpcServiceApplication.main</strong></li><li><strong>zheng-upms-server(jetty)</strong></li><li><strong>zheng-cms-admin(jetty)</strong></li></ul><span id="more"></span><h3 id="二、权限管理系统"><a href="#二、权限管理系统" class="headerlink" title="二、权限管理系统"></a>二、权限管理系统</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">├── zheng-upms -- 用户权限管理系统</span><br><span class="line">|    ├── zheng-upms-common -- upms系统公共模块</span><br><span class="line">|    ├── zheng-upms-dao -- 代码生成模块，无需开发</span><br><span class="line">|    ├── zheng-upms-client -- 集成upms依赖包，提供单点认证、授权、统一会话管理</span><br><span class="line">|    ├── zheng-upms-rpc-api -- rpc接口包</span><br><span class="line">|    ├── zheng-upms-rpc-service -- rpc服务提供者</span><br><span class="line">|    └── zheng-upms-server -- 用户权限系统及SSO服务端(是一个web工程)[端口:1111]</span><br></pre></td></tr></table></figure><h3 id="三、Example实体类"><a href="#三、Example实体类" class="headerlink" title="三、Example实体类"></a>三、Example实体类</h3><p>mybatis-generator自动生成实体类会生成Example实体类，方便查询。具体使用可以参考：</p><ul><li><a href="https://www.cnblogs.com/kangping/p/6001519.html">参考一</a></li><li><a href="https://blog.csdn.net/zhemeban/article/details/71901759">参考二</a></li><li><a href="http://www.mybatis.org/generator/generatedobjects/exampleClassUsage.html">参考三</a></li></ul><h3 id="四、lombok包的使用"><a href="#四、lombok包的使用" class="headerlink" title="四、lombok包的使用"></a>四、lombok包的使用</h3><p>lombok的可以对POJO进行很多封装，减少了很多重复性代码的书写，常用注解有：</p><ul><li>@Getter</li><li>@Setter</li><li>@Builder</li><li>@Data</li><li>@ToString</li></ul><p><a href="https://segmentfault.com/a/1190000005133786">参考</a></p><p><a href="https://blog.csdn.net/mccand1234/article/details/53456411">参考</a></p><h3 id="五、filter和interceptor之间的区别"><a href="#五、filter和interceptor之间的区别" class="headerlink" title="五、filter和interceptor之间的区别"></a>五、filter和interceptor之间的区别</h3><p>拦截器是AOP( Aspect-Oriented Programming)的一种实现，底层通过动态代理模式完成。</p><p>区别：</p><ul><li><strong>拦截器</strong>是基于java的反射机制的，而<strong>过滤器</strong>是基于函数回调。</li><li>拦截器不依赖于servlet容器，而过<strong>滤器依赖于servlet容器</strong>。</li><li>拦截器只能对action请求起作用，而过滤器则可以对几乎所有的请求起作用。</li><li>拦截器可以访问action上下文、值栈里的对象，而过滤器不能。</li><li>在action的生命周期中，拦截器可以多次被调用，而过滤器只能在容器初始化时被调用一次。<blockquote><p>两者的本质区别：从灵活性上说拦截器功能更强大些，Filter能做的事情，他都能做，而且可以在请求前，请求后执行，比较灵活。Filter主要是针对URL地址做一个编码的事情、过滤掉没用的参数、安全校验（比较泛的，比如登录不登录之类），太细的话，还是建议用interceptor。不过还是根据不同情况选择合适的。</p></blockquote></li></ul><p><a href="https://blog.csdn.net/qq_36411874/article/details/53996873">参考1</a></p><p><a href="https://www.jianshu.com/p/3e6433ead5c3">参考2</a></p><h3 id="六、sso"><a href="#六、sso" class="headerlink" title="六、sso"></a>六、sso</h3><p><a href="https://www.cnblogs.com/ywlaker/p/6113927.html">参考</a></p><h3 id="七、为什么登陆cms的后台，验证之后跳转到upms的后台"><a href="#七、为什么登陆cms的后台，验证之后跳转到upms的后台" class="headerlink" title="七、为什么登陆cms的后台，验证之后跳转到upms的后台"></a>七、为什么登陆cms的后台，验证之后跳转到upms的后台</h3><p>因为cms后台就是redirect到upms后台的</p><h3 id="八、ehcache"><a href="#八、ehcache" class="headerlink" title="八、ehcache"></a>八、ehcache</h3><p><a href="https://www.jianshu.com/p/5a0669d6305e">参考1</a></p><p><a href="http://raychase.iteye.com/blog/1545906">参考2</a></p><h3 id="九、关于分布式"><a href="#九、关于分布式" class="headerlink" title="九、关于分布式"></a>九、关于分布式</h3><p>可以把分布式系统看做一个以系统，他的应用是因为现在服务系统的计算越来越大，利用分散的主机分散大量请求的处理。</p><p><strong>但是很多的东西却因为分散导致了数据不一致，比如session、比如cache，所以又需要集中处理，集中处理常见的有一个集中服务提供一致性保证，比如利用的redis，但是需要网络IO处理，这样又损耗了一定的性能</strong></p>]]></content>
      
      
      <categories>
          
          <category> JAVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JAVA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java操作Redis</title>
      <link href="/2018/02/28/Java%E6%93%8D%E4%BD%9CRedis/"/>
      <url>/2018/02/28/Java%E6%93%8D%E4%BD%9CRedis/</url>
      
        <content type="html"><![CDATA[<h3 id="一、利用jedis客户端直接操作reids"><a href="#一、利用jedis客户端直接操作reids" class="headerlink" title="一、利用jedis客户端直接操作reids"></a>一、利用jedis客户端直接操作reids</h3><p><a href="http://www.cnblogs.com/edisonfeng/p/3571870.html">基础操作参考</a></p><p>1.1 概念： 切片池 &amp; 非切片池<br>关于切片池和非切片池的区别，  一般项目基本都使用非切片池；切片池主要用于分布式项目，可以设置主从Redis库。 </p><span id="more"></span><p>1.2 获取redis客户端</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RedisClient</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Jedis jedis;<span class="comment">// 非切片客户端连接</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> JedisPool jedisPool; <span class="comment">//非切片连接池</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ShardedJedis shardedJedis; <span class="comment">//切片客户端链接</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ShardedJedisPool shardedJedisPool;<span class="comment">// 切片链接池</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化非切片池</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initialPool</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">JedisPoolConfig</span> <span class="variable">config</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JedisPoolConfig</span>();</span><br><span class="line">        config.setMaxActive(<span class="number">20</span>);</span><br><span class="line">        config.setMaxIdle(<span class="number">5</span>);</span><br><span class="line">        config.setMaxWait(<span class="number">10001</span>);</span><br><span class="line">        config.setTestOnBorrow(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">        jedisPool = <span class="keyword">new</span> <span class="title class_">JedisPool</span>(config, <span class="string">&quot;127.0.0.1&quot;</span>, <span class="number">6379</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化切片池</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initialShardedPool</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">// 配置</span></span><br><span class="line">        <span class="type">JedisPoolConfig</span> <span class="variable">config</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JedisPoolConfig</span>();</span><br><span class="line">        config.setMaxActive(<span class="number">20</span>);</span><br><span class="line">        config.setMaxIdle(<span class="number">5</span>);</span><br><span class="line">        config.setMaxWait(<span class="number">10001</span>);</span><br><span class="line">        config.setTestOnBorrow(<span class="literal">false</span>);</span><br><span class="line">        <span class="comment">// slave</span></span><br><span class="line">        List&lt;JedisShardInfo&gt; shards = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;JedisShardInfo&gt;();</span><br><span class="line">        shards.add(<span class="keyword">new</span> <span class="title class_">JedisShardInfo</span>(<span class="string">&quot;127.0.0.1&quot;</span>, <span class="number">6379</span>, <span class="string">&quot;master&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// const</span></span><br><span class="line">        shardedJedisPool = <span class="keyword">new</span> <span class="title class_">ShardedJedisPool</span>(config, shards);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">RedisClient</span><span class="params">()</span>&#123;</span><br><span class="line">        initialPool();</span><br><span class="line">        initialShardedPool();</span><br><span class="line">        shardedJedis = shardedJedisPool.getResource();</span><br><span class="line">        jedis = jedisPool.getResource();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Jedis <span class="title function_">getJedis</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> jedis;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setJedis</span><span class="params">(Jedis jedis)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.jedis = jedis;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ShardedJedis <span class="title function_">getShardedJedis</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> shardedJedis;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setShardedJedis</span><span class="params">(ShardedJedis shardedJedis)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.shardedJedis = shardedJedis;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1.3 key操作和String操作</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RedisTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">RedisClient</span> <span class="variable">redisClient</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RedisClient</span>();</span><br><span class="line">    <span class="keyword">private</span> Jedis jedis;</span><br><span class="line">    <span class="keyword">private</span> ShardedJedis shardedJedis;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getCli</span><span class="params">()</span>&#123;</span><br><span class="line">        jedis = redisClient.getJedis();</span><br><span class="line">        shardedJedis = redisClient.getShardedJedis();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">KeyOperate</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;===key===&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 清空数据</span></span><br><span class="line">        System.out.println(<span class="string">&quot;清空库中所有数据：&quot;</span> + jedis.flushDB());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断key是否存在</span></span><br><span class="line">        System.out.println(<span class="string">&quot;判断key999键是否存在：&quot;</span> + shardedJedis.exists(<span class="string">&quot;key999&quot;</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;新增key001及其对应值：&quot;</span> + shardedJedis.set(<span class="string">&quot;key001&quot;</span>, <span class="string">&quot;value001&quot;</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;判断key001键是否存在：&quot;</span> + shardedJedis.exists(<span class="string">&quot;key001&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出系统中所有key</span></span><br><span class="line">        System.out.println(<span class="string">&quot;新增key002键值：&quot;</span> + shardedJedis.set(<span class="string">&quot;key002&quot;</span>, <span class="string">&quot;value002&quot;</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;系统中所有键如下：&quot;</span>);</span><br><span class="line">        Set&lt;String&gt; keys = jedis.keys(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        Iterator&lt;String&gt; it = keys.iterator();</span><br><span class="line">        <span class="keyword">while</span> (it.hasNext()) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> it.next();</span><br><span class="line">            System.out.println(key);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 删除某个key，若key不存在，忽略该命令</span></span><br><span class="line">        System.out.println(<span class="string">&quot;系统中删除key002：&quot;</span> + jedis.del(<span class="string">&quot;key002&quot;</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;判断key002是否存在：&quot;</span> + shardedJedis.exists(<span class="string">&quot;key002&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置key001的过期时间</span></span><br><span class="line">        System.out.println(<span class="string">&quot;设置key001的过期时间为5秒&quot;</span> + jedis.expire(<span class="string">&quot;key001&quot;</span>, <span class="number">5</span>));</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">2000</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 查看某个key的剩余时间，单位【秒】</span></span><br><span class="line">        System.out.println(<span class="string">&quot;查看key001的剩余生存时间：&quot;</span>+jedis.ttl(<span class="string">&quot;key001&quot;</span>));</span><br><span class="line">        <span class="comment">// 移除某个key的生存时间</span></span><br><span class="line">        System.out.println(<span class="string">&quot;移除key001的生存时间：&quot;</span>+jedis.persist(<span class="string">&quot;key001&quot;</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;查看key001的剩余生存时间：&quot;</span>+jedis.ttl(<span class="string">&quot;key001&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查看key所存储的值的类型</span></span><br><span class="line">        System.out.println(<span class="string">&quot;查看key所存储的值的类型&quot;</span> + jedis.type(<span class="string">&quot;key001&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 一些其他方法：1、修改键名：jedis.rename(&quot;key6&quot;, &quot;key0&quot;);</span></span><br><span class="line"><span class="comment">         *             2、将当前db的key移动到给定的db当中：jedis.move(&quot;foo&quot;, 1)</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">StringOperate</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;====String Operate====&quot;</span>);</span><br><span class="line">        <span class="comment">// 清空数据</span></span><br><span class="line">        System.out.println(<span class="string">&quot;清空所有数据：&quot;</span>+jedis.flushDB());</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;=====增加=====&quot;</span>);</span><br><span class="line">        jedis.set(<span class="string">&quot;key001&quot;</span>, <span class="string">&quot;value001&quot;</span>);</span><br><span class="line">        jedis.set(<span class="string">&quot;key002&quot;</span>, <span class="string">&quot;value002&quot;</span>);</span><br><span class="line">        jedis.set(<span class="string">&quot;key003&quot;</span>, <span class="string">&quot;value003&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;已新增的3个键值如下：&quot;</span>);</span><br><span class="line">        System.out.println(jedis.get(<span class="string">&quot;key001&quot;</span>));</span><br><span class="line">        System.out.println(jedis.get(<span class="string">&quot;key002&quot;</span>));</span><br><span class="line">        System.out.println(jedis.get(<span class="string">&quot;key003&quot;</span>));</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;=====删除=====&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;删除key003对应的键值：&quot;</span> + jedis.del(<span class="string">&quot;key003&quot;</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;获取key003对应的值：&quot;</span> + jedis.get(<span class="string">&quot;key003&quot;</span>));</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;=======修改======&quot;</span>);</span><br><span class="line">        <span class="comment">// 1.直接修改</span></span><br><span class="line">        System.out.println(<span class="string">&quot;直接覆盖key001数据&quot;</span>+jedis.set(<span class="string">&quot;key001&quot;</span>, <span class="string">&quot;value001-update&quot;</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;获取key001对应的值：&quot;</span> + jedis.get(<span class="string">&quot;key001&quot;</span>));</span><br><span class="line">        <span class="comment">// 2.append</span></span><br><span class="line">        System.out.println(<span class="string">&quot;在key002后面追加&quot;</span>+jedis.append(<span class="string">&quot;key002&quot;</span>,<span class="string">&quot;-append2&quot;</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;获取key002对应的值：&quot;</span> + jedis.get(<span class="string">&quot;key002&quot;</span>));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二、PubSub机制"><a href="#二、PubSub机制" class="headerlink" title="二、PubSub机制"></a>二、PubSub机制</h3><p><a href="http://blog.csdn.net/lihao21/article/details/48370687">参考链接</a></p><h3 id="三、从缓存中处理请求的两种方式：time-count"><a href="#三、从缓存中处理请求的两种方式：time-count" class="headerlink" title="三、从缓存中处理请求的两种方式：time&amp;count"></a>三、从缓存中处理请求的两种方式：time&amp;count</h3><p>首先：两种模式下，时间阈值（假设10s） 和 count阈值（100） 都是有用的：</p><ul><li>时间模式：若5s时已经add了100个，再等5s到10s后处理；若到了10s，还没add到100个，也处理</li><li>cout模式（适合较多数据的时候）：若5s时add到了100，直接处理；若到了10s，还没add到100个，也处理</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (MODE_TIME.equals(mode)) &#123;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (buffer.size() &lt; countThreshold) &#123;</span><br><span class="line">            <span class="type">C</span> <span class="variable">item</span> <span class="operator">=</span> pool.outPool();</span><br><span class="line">            <span class="keyword">if</span> (item != <span class="literal">null</span>) &#123;</span><br><span class="line">                buffer.add(item);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span> (System.currentTimeMillis() &lt; end);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (MODE_COUNT.equals(mode)) &#123;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="type">C</span> <span class="variable">item</span> <span class="operator">=</span> pool.outPool();</span><br><span class="line">        <span class="keyword">if</span> (item != <span class="literal">null</span>) &#123;</span><br><span class="line">            buffer.add(item);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span> (System.currentTimeMillis() &lt; end &amp;&amp; buffer.size() &lt; countThreshold);</span><br><span class="line">    pool.releaseLock();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="四、Redis-Sentinel"><a href="#四、Redis-Sentinel" class="headerlink" title="四、Redis Sentinel"></a>四、Redis Sentinel</h3><p><a href="http://redis.io/topics/sentinel">官方文档</a></p><p><a href="https://segmentfault.com/a/1190000002680804">Redis Sentinel机制与用法</a></p>]]></content>
      
      
      <categories>
          
          <category> JAVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JAVA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>很多话，但是不知道如何表达</title>
      <link href="/2018/02/19/%E5%BE%88%E5%A4%9A%E8%AF%9D%EF%BC%8C%E4%BD%86%E6%98%AF%E4%B8%8D%E7%9F%A5%E5%A6%82%E4%BD%95%E8%A1%A8%E8%BE%BE/"/>
      <url>/2018/02/19/%E5%BE%88%E5%A4%9A%E8%AF%9D%EF%BC%8C%E4%BD%86%E6%98%AF%E4%B8%8D%E7%9F%A5%E5%A6%82%E4%BD%95%E8%A1%A8%E8%BE%BE/</url>
      
        <content type="html"><![CDATA[<p>每次回来就莫名的手足无措。明明之前就做好了准备，知道这是一个玩笑，但是身边的人都很严肃，自己也就变得认真与紧张起来。</p><span id="more"></span><p>身边的人都在教我正确的生活状态。我不反感，也不完全认可，同样也感谢。因为一直都太让大家操心了。哥说，不要再让父母等待了。这确也让我哑口无言。他们在与我谈论工作的时候，总让我感受到他们在坚持某种难受的状态，而这种状态需要我去帮助他们解脱一样。似乎我的婚姻，以及其他的一切的都成了他们的负担，成了他们的责任，都是他们没做好。我不认可，但是我改变不了他们的想法，并且我尝试改变他们的观念，但多是徒劳无功。</p><p>我知道他们并没有考虑太多我的感受，而是在一个劲的表达自己的想法与情绪。但是我对于自己现在的一切也抱有埋怨与不满。就好像一个人熬到深夜，蜷缩着捂暖冰凉的床单。我的心里也确切知道生活本不应该这样。是该改变一下状态，也改变一下心态。</p><p>我所坚持的或许还是软弱，软弱于习惯已有的环境而不愿意改变，更不敢去尝试新鲜的东西。这样就被拘泥住了，自己还活的理直气壮。</p><p>也许尝试一下才能判断好与坏，不然剩给自己就剩下不尽的唏嘘。当我经历过了，也体会过了其中酸甜，才可以说，这样的生活滋味不好受，不好受。这或许也是妥协。</p><p>呸，呸！</p><p>多一些勇气，无须畏畏缩缩，表达出来自己的想法。多一些尝试，无须裹足不前，抓住每一个机会。生活可能是一件很复杂的事情，生活也可能是一件很简单的事情。接下来的时间，希望所有人都好，当然也希望自己一切都好。</p><p>我活在社会中，我也活在自己的世界中。干巴得。</p>]]></content>
      
      
      <categories>
          
          <category> 风月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 风月 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VPN操作</title>
      <link href="/2018/02/09/VPN%E6%93%8D%E4%BD%9C/"/>
      <url>/2018/02/09/VPN%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h3 id="一-客户端选择"><a href="#一-客户端选择" class="headerlink" title="一. 客户端选择"></a>一. 客户端选择</h3><p>Windows可以选择OpenVPN客户端</p><p>mac可以选择<a href="https://tunnelblick.net/downloads.html">tunnelblick</a></p><span id="more"></span><h3 id="二-登录之后可能不能自动修改DNS地址"><a href="#二-登录之后可能不能自动修改DNS地址" class="headerlink" title="二. 登录之后可能不能自动修改DNS地址"></a>二. 登录之后可能不能自动修改DNS地址</h3><p>那就需要手动设置。<br>在的“网络偏好设置”里面设置总是很麻烦。用命令行设置，<a href="http://blog.51cto.com/liongmagezi/1386792">参考链接</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">➜ /Users/buer $ networksetup -listallnetworkservices</span><br><span class="line">An asterisk (*) denotes that a network service is disabled.</span><br><span class="line">Wi-Fi</span><br><span class="line">iPhone USB</span><br><span class="line">Thunderbolt Bridge</span><br><span class="line">Bluetooth PAN</span><br><span class="line">➜ /Users/buer $ sudo networksetup -setdnsservers Wi-Fi 192.168.121.20</span><br></pre></td></tr></table></figure><p>操作完了记得改回来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo networksetup -setdnsservers Wi-Fi 8.8.8.8</span><br></pre></td></tr></table></figure><h3 id="三、其他客户端"><a href="#三、其他客户端" class="headerlink" title="三、其他客户端"></a>三、其他客户端</h3><ul><li>ssr：<ul><li>mac:<a href="https://github.com/wzdnzd/ShadowsocksX-NG-R">ShadowsocksX-NG-R</a></li><li>windows:<a href="https://github.com/shadowsocksrr/shadowsocksr-csharp">shadowsocksr-csharp</a>,<a href="https://github.com/HMBSbige/ShadowsocksR-Windows">ShadowsocksR-Windows</a></li></ul></li><li>ss：<a href="https://github.com/shadowsocks/ShadowsocksX-NG">ShadowsocksX-NG</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> MAC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XML操作</title>
      <link href="/2018/01/06/XML%E6%93%8D%E4%BD%9C/"/>
      <url>/2018/01/06/XML%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h3 id="一、需要被解析的xml"><a href="#一、需要被解析的xml" class="headerlink" title="一、需要被解析的xml"></a>一、需要被解析的xml</h3><p>解析一个这样的xml：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">学生花名册</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">学生</span> <span class="attr">id</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">性别</span>&gt;</span>男<span class="tag">&lt;/<span class="name">性别</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">姓名</span>&gt;</span>李华<span class="tag">&lt;/<span class="name">姓名</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">年龄</span>&gt;</span>14<span class="tag">&lt;/<span class="name">年龄</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">电话</span>&gt;</span>6287555<span class="tag">&lt;/<span class="name">电话</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">学生</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">学生</span> <span class="attr">id</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">性别</span>&gt;</span>女<span class="tag">&lt;/<span class="name">性别</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">姓名</span>&gt;</span>张三<span class="tag">&lt;/<span class="name">姓名</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">年龄</span>&gt;</span>16<span class="tag">&lt;/<span class="name">年龄</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">电话</span>&gt;</span>8273425<span class="tag">&lt;/<span class="name">电话</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">学生</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">学生花名册</span>&gt;</span></span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="二、利用Dom4j进行解析"><a href="#二、利用Dom4j进行解析" class="headerlink" title="二、利用Dom4j进行解析"></a>二、利用Dom4j进行解析</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">dom4jParseXML</span><span class="params">(String path)</span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 1. 获取SAXReader对象</span></span><br><span class="line">        org.dom4j.io.<span class="type">SAXReader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SAXReader</span>();</span><br><span class="line">        <span class="comment">// 获取resouce</span></span><br><span class="line">        <span class="type">URL</span> <span class="variable">resource</span> <span class="operator">=</span> getClass().getClassLoader().getResource(path);</span><br><span class="line">        <span class="comment">// 2. 利用SAXReader对象的read方法获取Docment对象</span></span><br><span class="line">        org.dom4j.<span class="type">Document</span> <span class="variable">document</span> <span class="operator">=</span> reader.read(resource);</span><br><span class="line">        <span class="comment">// 3. 获取document对象的根节点</span></span><br><span class="line">        org.dom4j.<span class="type">Element</span> <span class="variable">rootElement</span> <span class="operator">=</span> document.getRootElement();</span><br><span class="line">        <span class="comment">// 4. 通过根节点的elementIterator方法获取对应下面的所有子节点</span></span><br><span class="line">        <span class="type">Iterator</span> <span class="variable">it</span> <span class="operator">=</span> rootElement.elementIterator();</span><br><span class="line">        <span class="comment">// 5. 循环迭代器</span></span><br><span class="line">        <span class="keyword">while</span> (it.hasNext())&#123;</span><br><span class="line">            <span class="comment">// 5.1 获取到每一个学生节点</span></span><br><span class="line">            org.dom4j.<span class="type">Element</span> <span class="variable">ele</span> <span class="operator">=</span> (org.dom4j.Element) it.next();</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;======开始一个学生的解析======&quot;</span>);</span><br><span class="line">            <span class="comment">//开始某一个学生的解析</span></span><br><span class="line">            List&lt;Attribute&gt; attributes = ele.attributes();</span><br><span class="line">            <span class="keyword">for</span> (Attribute attribute : attributes) &#123;</span><br><span class="line">                System.out.println(attribute.getName() + <span class="string">&quot;:&quot;</span> + attribute.getValue());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//获取该学生的所有的子节点</span></span><br><span class="line">            <span class="type">Iterator</span> <span class="variable">stdAtt</span> <span class="operator">=</span> ele.elementIterator();</span><br><span class="line">            <span class="keyword">while</span> (stdAtt.hasNext())&#123;</span><br><span class="line">                org.dom4j.<span class="type">Element</span> <span class="variable">oneAttr</span> <span class="operator">=</span> (org.dom4j.Element) stdAtt.next();</span><br><span class="line">                System.out.println(oneAttr.getQName().getName() +<span class="string">&quot;:&quot;</span>+ oneAttr.getText());</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">&quot;======结束一个学生的解析======&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (DocumentException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三、直接利用的jdk的dom进行解析"><a href="#三、直接利用的jdk的dom进行解析" class="headerlink" title="三、直接利用的jdk的dom进行解析"></a>三、直接利用的jdk的dom进行解析</h3><p>（目前此段代码还有点儿问题，暂时不究，后期再补）<br>目标是将上述的xml解析成为一个map对象：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[<span class="attr">id1</span>:&#123;</span><br><span class="line">    属性<span class="number">1</span>：值<span class="number">1</span>，</span><br><span class="line">    属性<span class="number">2</span>：值<span class="number">2</span></span><br><span class="line">&#125;，</span><br><span class="line"><span class="attr">id2</span>:&#123;</span><br><span class="line">    属性<span class="number">1</span>：值<span class="number">1</span>，</span><br><span class="line">    属性<span class="number">2</span>：值<span class="number">2</span></span><br><span class="line">&#125;]</span><br></pre></td></tr></table></figure><p>代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">XMLParseTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">        parseXML(<span class="string">&quot;students.xml  &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String,Object&gt; <span class="title function_">parseXML</span><span class="params">(String path)</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 获取到DocumentBuilder</span></span><br><span class="line">            <span class="type">DocumentBuilderFactory</span> <span class="variable">dbf</span> <span class="operator">=</span> DocumentBuilderFactory.newInstance();</span><br><span class="line">            <span class="type">DocumentBuilder</span> <span class="variable">db</span> <span class="operator">=</span> dbf.newDocumentBuilder();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//获取到Document</span></span><br><span class="line"><span class="comment">//            InputStream in = new FileInputStream(path);//经常出现找不到文件的错误</span></span><br><span class="line">            <span class="type">URL</span> <span class="variable">resource</span> <span class="operator">=</span> getClass().getClassLoader().getResource(path);</span><br><span class="line">            <span class="type">URLConnection</span> <span class="variable">urlConnection</span> <span class="operator">=</span> resource.openConnection();</span><br><span class="line">            <span class="keyword">final</span> <span class="type">InputStream</span> <span class="variable">in</span> <span class="operator">=</span> urlConnection.getInputStream();</span><br><span class="line">            <span class="type">Document</span> <span class="variable">doc</span> <span class="operator">=</span> db.parse(in);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//获取到根节点</span></span><br><span class="line">            <span class="type">Element</span> <span class="variable">root</span> <span class="operator">=</span> doc.getDocumentElement();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//获取到根节点下的子节点，也就是所有的学生</span></span><br><span class="line">            <span class="type">NodeList</span> <span class="variable">childNodes</span> <span class="operator">=</span> root.getChildNodes();</span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> == childNodes)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 所有学生的所有信息都放到了这个map里面</span></span><br><span class="line">            Map&lt;String, Object&gt; allStds = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, Object&gt;();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span> ; i &lt; childNodes.getLength() ; i++)&#123;</span><br><span class="line">                <span class="comment">// 一个学生</span></span><br><span class="line">                <span class="type">Node</span> <span class="variable">oneStd</span> <span class="operator">=</span> childNodes.item(i);</span><br><span class="line">                <span class="comment">// 若此Node是一个节点</span></span><br><span class="line">                <span class="keyword">if</span> (Node.ELEMENT_NODE == oneStd.getNodeType())&#123;</span><br><span class="line">                    <span class="comment">// 属性也是一个Node，获取到Id</span></span><br><span class="line">                    <span class="type">Node</span> <span class="variable">idNode</span> <span class="operator">=</span> oneStd.getAttributes().getNamedItem(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">                    <span class="type">String</span> <span class="variable">id</span> <span class="operator">=</span> idNode.getNodeValue();</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//获取这个学生的子节点</span></span><br><span class="line">                    <span class="type">NodeList</span> <span class="variable">oneStdChildNodes</span> <span class="operator">=</span> oneStd.getChildNodes();</span><br><span class="line">                    <span class="comment">//这个学生的所有属性都放到了这个map里面</span></span><br><span class="line">                    Map&lt;String , Object&gt; oneStdAttrs = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, Object&gt;();</span><br><span class="line">                    <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>; j&lt;oneStdChildNodes.getLength(); j++)&#123;</span><br><span class="line">                        <span class="comment">//获取到该学生的一个属性Node</span></span><br><span class="line">                        <span class="type">Node</span> <span class="variable">stdOne</span> <span class="operator">=</span> oneStdChildNodes.item(j);</span><br><span class="line">                        <span class="type">String</span> <span class="variable">attribute</span> <span class="operator">=</span> stdOne.getNodeName();</span><br><span class="line">                        <span class="type">String</span> <span class="variable">val</span> <span class="operator">=</span> stdOne.getNodeValue();</span><br><span class="line">                        oneStdAttrs.put(attribute,val);</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    allStds.put(id, oneStdChildNodes);</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> allStds;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JAVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JAVA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JSON</title>
      <link href="/2018/01/02/JSON/"/>
      <url>/2018/01/02/JSON/</url>
      
        <content type="html"><![CDATA[<h3 id="一、fastjson"><a href="#一、fastjson" class="headerlink" title="一、fastjson"></a>一、fastjson</h3><p>解析字符串：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//data是json字符串，TraderProductListDto是要转换为的dto</span></span><br><span class="line">JSONObject.parseArray(data, TraderProductListDto.class);</span><br></pre></td></tr></table></figure><span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> JAVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JAVA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring笔记</title>
      <link href="/2017/12/28/Spring%E7%AC%94%E8%AE%B0/"/>
      <url>/2017/12/28/Spring%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="一、Ajax请求返回json对象"><a href="#一、Ajax请求返回json对象" class="headerlink" title="一、Ajax请求返回json对象"></a>一、Ajax请求返回json对象</h3><p>直接用<code>@Response</code>会出现中文乱码的情况，所以之前做的时候都写了一个工具类：<br><a href="https://github.com/chenbuer/springboot-soa-blog/blob/master/springboot-soa-blog-controller%2Fsrc%2Fmain%2Fjava%2Fcom%2Fchenbuer%2Futil%2FResponseUtil.java">ResponseUtil.java</a></p><span id="more"></span><p>其实可以这样写</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(value = &quot;/path/of/URL&quot;, produces = &#123; &quot;application/json;charset=UTF-8&quot; &#125;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getQszgListInfo</span><span class="params">(HttpServletRequest request)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 要返回的json</span></span><br><span class="line">        Map&lt;String, Object&gt; res = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, Object&gt;();</span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">return</span> JSONObject.toJSONString(res);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>返回文本，RequestMapping可以写为<code>@RequestMapping(value = &quot;/path/of/URL&quot;, produces = &quot;text/plain;charset=UTF-8&quot;)</code>。<a href="https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/web/bind/annotation/RequestMapping.html#produces--">官方文档</a></p><p>也可以參照<a href="https://blog.csdn.net/ctmold/article/details/79081483"><br>让zheng更完美地支持ajax提交的json数据</a></p><h3 id="二、tiny-spring学习"><a href="#二、tiny-spring学习" class="headerlink" title="二、tiny-spring学习"></a>二、tiny-spring学习</h3><ol><li>step-1-container-register-and-get</li></ol><p><code>BeanFactory</code>是注册和获取bean的工厂，说白了就是讲bean初始化并放到一个Map中，key值就是beanName，获取的时候，根据这个beanName获取到他的对象。就是这么简单。</p>]]></content>
      
      
      <categories>
          
          <category> JAVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JAVA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础</title>
      <link href="/2017/12/25/Java%E5%9F%BA%E7%A1%80/"/>
      <url>/2017/12/25/Java%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h3 id="一、List处理"><a href="#一、List处理" class="headerlink" title="一、List处理"></a>一、List处理</h3><blockquote><p>1.1 List截取字符串</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">noRaiseDrop.subList(fromIndex, toIndex);</span><br></pre></td></tr></table></figure><blockquote><p>1.2 List拼接</p></blockquote><p>用Apache的org.apache.commons.lang.StringUtils.</p><span id="more"></span><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-pool2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">StringUtils.join(list, <span class="string">&quot;,&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="二、Spring-tomcat-jndi配置"><a href="#二、Spring-tomcat-jndi配置" class="headerlink" title="二、Spring + tomcat jndi配置"></a>二、Spring + tomcat jndi配置</h3><p><a href="http://www.cnblogs.com/zhilin-yang/p/4958000.html">配置方法</a></p><h3 id="三、org-springframework-beans-BeanUtils-copyProperties的使用"><a href="#三、org-springframework-beans-BeanUtils-copyProperties的使用" class="headerlink" title="三、org.springframework.beans.BeanUtils#copyProperties的使用"></a>三、org.springframework.beans.BeanUtils#copyProperties的使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BeanUtilsCopyTest</span> &#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">A</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>(<span class="string">&quot;a&quot;</span>,<span class="number">1</span>,<span class="number">2L</span>,<span class="string">&quot;d&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;a======&quot;</span>);</span><br><span class="line">        System.out.println(a);</span><br><span class="line">        <span class="type">B</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">B</span>();</span><br><span class="line">        System.out.println(<span class="string">&quot;b======&quot;</span>);</span><br><span class="line">        BeanUtils.copyProperties(a,b);</span><br><span class="line">        System.out.println(b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">A</span>&#123;</span><br><span class="line">        <span class="keyword">private</span> String a;</span><br><span class="line">        <span class="keyword">private</span> <span class="type">int</span> b;</span><br><span class="line">        <span class="keyword">private</span> <span class="type">long</span> c;</span><br><span class="line">        <span class="keyword">private</span> String d;</span><br><span class="line">        <span class="comment">// 省略getter/setter和toString()和构造函数</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">B</span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="type">int</span> b;</span><br><span class="line">        <span class="keyword">private</span> <span class="type">long</span> c;</span><br><span class="line">        <span class="keyword">private</span> String d;</span><br><span class="line">        <span class="keyword">private</span> String e;</span><br><span class="line">        <span class="comment">// 省略getter/setter和toString()</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a======</span><br><span class="line">A&#123;a=<span class="string">&#x27;a&#x27;</span>, b=<span class="number">1</span>, c=<span class="number">2</span>, d=<span class="string">&#x27;d&#x27;</span>&#125;</span><br><span class="line">b======</span><br><span class="line">B&#123;b=<span class="number">1</span>, c=<span class="number">2</span>, d=<span class="string">&#x27;d&#x27;</span>, e=<span class="string">&#x27;null&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="四、-Qualifier与-Autowired"><a href="#四、-Qualifier与-Autowired" class="headerlink" title="四、@Qualifier与@Autowired"></a>四、@Qualifier与@Autowired</h3><p>简单讲，就是@Autowired是根据类型来寻找bean的，当一个接口可能有好几个实现类，并且都注释为Bean，就需要@Qualifier来指定对应的bean id。<br><a href="http://blog.csdn.net/clerk0324/article/details/25198457">参考链接</a></p><h3 id="五、ThreadPoolTaskExecutor的使用"><a href="#五、ThreadPoolTaskExecutor的使用" class="headerlink" title="五、ThreadPoolTaskExecutor的使用"></a>五、ThreadPoolTaskExecutor的使用</h3><p>关于它的配置可以<a href="http://blog.csdn.net/seminmredoxu/article/details/7000709">参考链接</a><br>使用方法：<br>首先定义线程池：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span> =<span class="string">&quot;taskExecutor&quot;</span>  <span class="attr">class</span> =<span class="string">&quot;org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span> =<span class="string">&quot;corePoolSize&quot;</span> <span class="attr">value</span> =<span class="string">&quot;5&quot;</span> /&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span> =<span class="string">&quot;keepAliveSeconds&quot;</span> <span class="attr">value</span> =<span class="string">&quot;300&quot;</span> /&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span> =<span class="string">&quot;maxPoolSize&quot;</span> <span class="attr">value</span> =<span class="string">&quot;10&quot;</span> /&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span> =<span class="string">&quot;queueCapacity&quot;</span> <span class="attr">value</span> =<span class="string">&quot;25&quot;</span> /&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后使用线程池：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ThreadPoolTaskExectorTest</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 线程池</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="meta">@Qualifier(&quot;runBatchTaskExecutor&quot;)</span></span><br><span class="line">    ThreadPoolTaskExecutor taskExecutor;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">crateTask</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">CreateLoanInfoTask</span> <span class="variable">task</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CreateLoanInfoTask</span>();</span><br><span class="line">        taskExecutor.execute(task);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">CreateLoanInfoTask</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="comment">// 省略具体的逻辑</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>只要把要执行的runnable对象（task）扔进<code>ThreadPoolTaskExecutor taskExecutor</code>中去，然后他就自己按照配置策略，去执行对应的runnable对象中的run方法。</p><p>另外：<br><a href="http://blog.csdn.net/xtwolf008/article/details/7713580">Callable和Runnable用法的比较</a></p><h3 id="六、Callable、Future和FutureTask"><a href="#六、Callable、Future和FutureTask" class="headerlink" title="六、Callable、Future和FutureTask"></a>六、Callable、Future和FutureTask</h3><p>菜鸟A：问一个基础的问题，线程池可以理解为java异步编程的一种方法吗？</p><p>老鸟B：对啊，多线程就是一种异步编程啊。多线程就是为了达到异步的</p><p>菜鸟A：在上面讲的ThreadPoolTaskExector。如果线程池连的Runnable里面的run方法，是跟另一个系统交互的。另一个系统返回的response怎么处理呢？</p><p>他可以在run()中等待结果response，可以立即处理response，也可以将response封装成一个runnable对象再次扔到其他的线程池中等待处理。</p><p>但是，他还是需要等待response的。</p><p>老鸟B：这个时候用Callable、Future和FutureTask就更好了</p><p><a href="http://www.cnblogs.com/dolphin0520/p/3949310.html">Callable、Future和FutureTask</a></p><h3 id="七、FTP操作"><a href="#七、FTP操作" class="headerlink" title="七、FTP操作"></a>七、FTP操作</h3><p>利用commons-net这个jar包：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-net<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-net<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JAVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JAVA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MAC操作</title>
      <link href="/2017/12/15/MAC%E6%93%8D%E4%BD%9C/"/>
      <url>/2017/12/15/MAC%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h3 id="一-给mac安装Consolas-字体"><a href="#一-给mac安装Consolas-字体" class="headerlink" title="一. 给mac安装Consolas 字体"></a>一. 给mac安装Consolas 字体</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># brew is a part of Mac OS X package manager called Homebrew (http://brew.sh/).</span></span><br><span class="line">brew install cabextract</span><br><span class="line"><span class="built_in">cd</span> ~/Downloads</span><br><span class="line"><span class="built_in">mkdir</span> consolas</span><br><span class="line"><span class="built_in">cd</span> consolas</span><br><span class="line">curl -O http://download.microsoft.com/download/f/5/a/f5a3df76-d856-4a61-a6bd-722f52a5be26/PowerPointViewer.exe</span><br><span class="line">cabextract PowerPointViewer.exe</span><br><span class="line">cabextract ppviewer.cab</span><br><span class="line">open CONSOLA*.TTF</span><br><span class="line"><span class="comment"># Press Intall font. That is all.</span></span><br></pre></td></tr></table></figure><span id="more"></span><p><a href="http://ikato.com/blog/how-to-install-consolas-font-on-mac-os-x.html">参考链接</a></p><h3 id="二-安装的软件"><a href="#二-安装的软件" class="headerlink" title="二. 安装的软件"></a>二. 安装的软件</h3><p><a href="http://www.jianshu.com/p/2172835cfb17">office</a></p><p><a href="https://www.docker.com/docker-mac">docker</a></p><p><a href="https://hub.alauda.cn/repos/alauda/mysql">docker-mysql</a></p><p><a href="https://zh.snipaste.com/">snipaste</a></p><p><a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html">安装Java8</a>-<a href="https://gist.github.com/schnell18/bcb9833f725be22f6acd01f94b486392">卸载Java9</a></p><p><a href="https://zookeeper.apache.org/releases.html#download">zookeeper</a>-<a href="http://www.jianshu.com/p/0ba61bf7149f">安装参考</a></p><p><a href="http://www.cnblogs.com/wang1024/p/7485758.html">IDEA</a></p><p><a href="http://www.eclipse.org/downloads/">eclipse</a></p><p><a href="https://github.com/XX-net/XX-Net/wiki/IPv6-Mac">开启IPV6</a></p><p><a href="https://www.zhihu.com/question/21075430">快捷设置窗口大小Spectacle</a></p><p><a href="http://blog.csdn.net/jobschen/article/details/49559023">Mac OS X 安装pip , ipython</a> | <a href="http://pythonguidecn.readthedocs.io/zh/latest/starting/install3/osx.html">Python3</a></p><h3 id="三、关闭仪表盘-dashboard"><a href="#三、关闭仪表盘-dashboard" class="headerlink" title="三、关闭仪表盘(dashboard)"></a>三、关闭仪表盘(dashboard)</h3><p>系统偏好设置-&gt;调度中心（或者直接搜索dashboard）-&gt;仪表盘的下拉框选择关闭</p><p><a href="https://www.maczd.com/post/39.html">参考链接</a></p><h3 id="四、Mac常用键的简写"><a href="#四、Mac常用键的简写" class="headerlink" title="四、Mac常用键的简写"></a>四、Mac常用键的简写</h3><p><img src="https://github.com/chenbuer/markdownImgs/blob/master/blog/mac%E5%B8%B8%E7%94%A8%E9%94%AE.png?raw=true" alt="Mac常用键的简写"></p>]]></content>
      
      
      <categories>
          
          <category> MAC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA设置与操作</title>
      <link href="/2017/12/11/IDEA%E8%AE%BE%E7%BD%AE%E4%B8%8E%E6%93%8D%E4%BD%9C/"/>
      <url>/2017/12/11/IDEA%E8%AE%BE%E7%BD%AE%E4%B8%8E%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h3 id="一、工具栏中文乱码，但是编辑框不乱码"><a href="#一、工具栏中文乱码，但是编辑框不乱码" class="headerlink" title="一、工具栏中文乱码，但是编辑框不乱码"></a>一、工具栏中文乱码，但是编辑框不乱码</h3><p>进入IDE Settings 里的 Appearance项，选中Override default fonts by ，把 Name 设置为 SimSun，Size 根据自己喜好设置（我一般设为 12）。确定</p><span id="more"></span><p><a href="http://www.cnblogs.com/jlxuqiang/p/4083596.html">参考链接</a></p><h3 id="二、alt-ctrl-箭头-与系统热键冲突"><a href="#二、alt-ctrl-箭头-与系统热键冲突" class="headerlink" title="二、alt+ctrl+箭头 与系统热键冲突"></a>二、alt+ctrl+箭头 与系统热键冲突</h3><p>在IDEA中alt+ctrl+←代表后退，<br>alt+ctrl+→代表前进，但是Windows本身有热键，表示旋转屏幕，那么就去除旋转屏幕的热键。</p><p><a href="https://jingyan.baidu.com/article/ceb9fb10dfc7c28cad2ba026.html">参考链接</a></p><h3 id="三、键盘映射"><a href="#三、键盘映射" class="headerlink" title="三、键盘映射"></a>三、键盘映射</h3><table><thead><tr><th>操作方法(Windows)</th><th>操作方法(Mac)</th><th>操作作用</th></tr></thead><tbody><tr><td>ctrl+alt+o</td><td></td><td>删除不用的import</td></tr><tr><td>ctrl+左击</td><td>command+左击</td><td>跳转到定义</td></tr><tr><td>shift+ctrl+左击</td><td></td><td>跳转到接口实现</td></tr><tr><td>ctrl+F4</td><td></td><td>关闭当前窗口</td></tr><tr><td>ctrl + alt + space</td><td></td><td>智能提示</td></tr><tr><td>ctrl+j</td><td>command + j</td><td>智能提示(一些简写的提示)</td></tr><tr><td>ctrl + U</td><td></td><td>定位到类的父类、接口</td></tr><tr><td>ctrl + H</td><td>ctrl + H</td><td>查看类的继承结构</td></tr><tr><td>ctrl + shift + H</td><td></td><td>查看方法的继承结构</td></tr><tr><td>ctrl + alt +H</td><td></td><td>查看类或方法被调用情况</td></tr><tr><td>alt + insert</td><td></td><td>自动生成getter&#x2F;setter</td></tr><tr><td>Ctrl + Shift + I</td><td></td><td>原地参看类、方法的声明</td></tr></tbody></table><p><a href="http://www.ituring.com.cn/article/37792">MAC下快捷键1</a>-<a href="http://blog.csdn.net/wfp458113181wfp/article/details/24579781">参考链接2</a>-<a href="http://wiki.jikexueyuan.com/project/intellij-idea-tutorial/keymap-mac-introduce.html">MAC下快捷键2</a></p><h3 id="四、不能创建package"><a href="#四、不能创建package" class="headerlink" title="四、不能创建package"></a>四、不能创建package</h3><p><img src="https://github.com/chenbuer/markdownImgs/blob/master/blog/canNotCreatePackage.png?raw=true" alt="不能创建package"></p><h3 id="五、使得package展示和eclipse一样"><a href="#五、使得package展示和eclipse一样" class="headerlink" title="五、使得package展示和eclipse一样"></a>五、使得package展示和eclipse一样</h3><p><img src="https://github.com/chenbuer/markdownImgs/blob/master/blog/makePackageLikeEclipse.png?raw=true" alt="使得package展示和eclipse一样"></p><h3 id="六、函数的注释因为跟入参不一致，IDEA红色报错"><a href="#六、函数的注释因为跟入参不一致，IDEA红色报错" class="headerlink" title="六、函数的注释因为跟入参不一致，IDEA红色报错"></a>六、函数的注释因为跟入参不一致，IDEA红色报错</h3><p><img src="https://github.com/chenbuer/markdownImgs/blob/master/blog/annotationIsRed.png?raw=true" alt="函数的注释因为跟入参不一致，IDEA红色报错"></p><p><a href="http://blog.csdn.net/river_continent/article/details/72841428">参考链接</a></p><h3 id="七、IDEA中SVN不好使"><a href="#七、IDEA中SVN不好使" class="headerlink" title="七、IDEA中SVN不好使"></a>七、IDEA中SVN不好使</h3><blockquote><p>现象：</p></blockquote><p><img src="https://github.com/chenbuer/markdownImgs/blob/master/blog/ideaSvnUnuseful.png?raw=true" alt="IDEA中SVN不好使"></p><blockquote><p>解决方法：</p></blockquote><p><img src="https://github.com/chenbuer/markdownImgs/blob/master/blog/ideaSvnUnusefulSolution.png?raw=true" alt="IDEA中SVN不好使的解决方法"></p><p><a href="http://blog.csdn.net/u012940983/article/details/38679667">参考链接</a></p><h3 id="八、删除文件，SVN提示Schedule-for-Deletion"><a href="#八、删除文件，SVN提示Schedule-for-Deletion" class="headerlink" title="八、删除文件，SVN提示Schedule for Deletion"></a>八、删除文件，SVN提示Schedule for Deletion</h3><blockquote><p>现象：</p></blockquote><p><img src="https://github.com/chenbuer/markdownImgs/blob/master/blog/scheduleForDel.png?raw=true" alt="Schedule for Deletion"></p><blockquote><p>不同选择会有不同的结果：选择Yes之后Status为deleted，选择No之后Status为missing</p></blockquote><p><img src="https://github.com/chenbuer/markdownImgs/blob/master/blog/scheduleForDelAndChooseYes.png?raw=true" alt="不同选择会有不同的结果"></p><h3 id="九、IDEA的JDK设置"><a href="#九、IDEA的JDK设置" class="headerlink" title="九、IDEA的JDK设置"></a>九、IDEA的JDK设置</h3><blockquote><p>每个module都可以设置自己的：</p></blockquote><p><img src="https://github.com/chenbuer/markdownImgs/blob/master/blog/IDEAAddJdk.png?raw=true" alt="每个module单独设置"></p><blockquote><p>全局的设置？如下：</p></blockquote><p><img src="https://github.com/chenbuer/markdownImgs/blob/master/blog/globalJdkSetting.png?raw=true" alt="全局JDK设置"></p><h3 id="十、MAC下IDEA补全快捷键和搜狗快捷键冲突"><a href="#十、MAC下IDEA补全快捷键和搜狗快捷键冲突" class="headerlink" title="十、MAC下IDEA补全快捷键和搜狗快捷键冲突"></a>十、MAC下IDEA补全快捷键和搜狗快捷键冲突</h3><p>这两个快捷键都是<code>ctrl+Space</code>，所以就给IDEA添加一个补全的快捷键为<code>Option+Command+Space</code>与Windows下的<code>Alt+Ctrl+Space</code>对应起来，但是<code>Option+Command+Space</code>又与系统快捷键冲突。处理方法如下：</p><blockquote><p>删除系统的快捷键</p></blockquote><p><img src="https://github.com/chenbuer/markdownImgs/blob/master/blog/idea-completion/rmMacAltCmdSpace.png?raw=true" alt="删除系统的快捷键"></p><blockquote><p>给IDEA增加一个快捷键<br><img src="https://github.com/chenbuer/markdownImgs/blob/master/blog/idea-completion/addOneCutForCompletion.png?raw=true" alt="给IDEA增加一个快捷键"></p></blockquote><h3 id="十一、pom-xml中增加了jar包，但是在Library中没有添加进来"><a href="#十一、pom-xml中增加了jar包，但是在Library中没有添加进来" class="headerlink" title="十一、pom.xml中增加了jar包，但是在Library中没有添加进来"></a>十一、pom.xml中增加了jar包，但是在Library中没有添加进来</h3><blockquote><p>解决方法：</p></blockquote><p><img src="https://github.com/chenbuer/markdownImgs/blob/master/blog/IDEAMvnAutoImport.png?raw=true" alt="pom.xml中增加了jar包，但是在Library中没有添加进来"></p><h3 id="十二、IDEA设置tomcat，在选择deploy项目时war和war-exploded的区别"><a href="#十二、IDEA设置tomcat，在选择deploy项目时war和war-exploded的区别" class="headerlink" title="十二、IDEA设置tomcat，在选择deploy项目时war和war exploded的区别"></a>十二、IDEA设置tomcat，在选择deploy项目时war和war exploded的区别</h3><p>一个project有两个选择，一个是选择war，一个是选择war exploded</p><blockquote><p>war模式：将WEB工程以包的形式上传到服务器 ；先打成war包，再发布；</p></blockquote><blockquote><p>war exploded模式：将WEB工程以当前文件夹的位置关系上传到服务器；war exploded模式是直接把文件夹、jsp页面 、classes等等移到Tomcat 部署文件夹里面，进行加载部署。因此这种方式支持热部署，一般在开发的时候也是用这种方式。</p></blockquote><p>热部署的时候有多热？是修改之后立即生效，还是重启之后生效？是这个配置：<br><a href="http://img.blog.csdn.net/20170223094201219?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveGxnZW4xNTczODc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast">IDEA部署tomcat热部署</a></p><p><a href="http://blog.csdn.net/linjpg/article/details/73322881">参考链接</a></p><h3 id="十三、安装插件sonarLint"><a href="#十三、安装插件sonarLint" class="headerlink" title="十三、安装插件sonarLint"></a>十三、安装插件sonarLint</h3><p><a href="http://www.onstepr.com/posts/77">参考链接</a></p><h3 id="十四、IDEA中的properties文件中文显示不正确"><a href="#十四、IDEA中的properties文件中文显示不正确" class="headerlink" title="十四、IDEA中的properties文件中文显示不正确"></a>十四、IDEA中的properties文件中文显示不正确</h3><p><a href="https://blog.csdn.net/lzjansing/article/details/50593023">参考链接</a><br>settings-&gt;搜索File Encoding-&gt;把最下面的“Transparent native-to-ascii conversion”打上勾</p><h3 id="十五、pom的依赖关系"><a href="#十五、pom的依赖关系" class="headerlink" title="十五、pom的依赖关系"></a>十五、pom的依赖关系</h3><p>IDEA可以直接展示pom之间的依赖关系，简直牛逼的一腿<br><img src="https://img-blog.csdn.net/20171130184732567"></p><p><a href="https://blog.csdn.net/qq_27093465/article/details/69226949">参考</a>。学习怎么利用这个排除依赖冲突</p><h3 id="十六、不让import星号"><a href="#十六、不让import星号" class="headerlink" title="十六、不让import星号"></a>十六、不让import星号</h3><p><a href="https://blog.csdn.net/jackrex/article/details/40181223">参考</a></p>]]></content>
      
      
      <categories>
          
          <category> JAVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GIT</title>
      <link href="/2017/12/11/git/"/>
      <url>/2017/12/11/git/</url>
      
        <content type="html"><![CDATA[<h3 id="一-设置代理"><a href="#一-设置代理" class="headerlink" title="一. 设置代理"></a>一. 设置代理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.proxy http://127.0.0.1:8087</span><br><span class="line">git config --global https.proxy http://127.0.0.1:8087</span><br><span class="line">git config --global http.sslverify <span class="literal">false</span></span><br></pre></td></tr></table></figure><span id="more"></span><p>也可以设置socket代理，不错：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.proxy <span class="string">&#x27;socks5://127.0.0.1:1080&#x27;</span></span><br><span class="line">git config --global https.proxy <span class="string">&#x27;socks5://127.0.0.1:1080&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="二-撤销代理"><a href="#二-撤销代理" class="headerlink" title="二. 撤销代理"></a>二. 撤销代理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global --<span class="built_in">unset</span> http.proxy</span><br><span class="line">git config --global --<span class="built_in">unset</span> https.proxy</span><br></pre></td></tr></table></figure><h3 id="三-如果要查当前的代理配置"><a href="#三-如果要查当前的代理配置" class="headerlink" title="三. 如果要查当前的代理配置"></a>三. 如果要查当前的代理配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global --get http.proxy</span><br><span class="line">git config --global --get https.proxy</span><br></pre></td></tr></table></figure><h3 id="四-切换到远程分支"><a href="#四-切换到远程分支" class="headerlink" title="四. 切换到远程分支"></a>四. 切换到远程分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -t origin/hexo</span><br></pre></td></tr></table></figure><h3 id="五-Windows下手动改修配置文件"><a href="#五-Windows下手动改修配置文件" class="headerlink" title="五. Windows下手动改修配置文件"></a>五. Windows下手动改修配置文件</h3><p>在Windows下找不到的gitconfig文件，但是我们都知道的Linux下<code>~/.gitconfig</code>。所以，用gitbash吧：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vi ~/.gitconfig</span><br></pre></td></tr></table></figure><h3 id="六-用https也不用每次都输入密码"><a href="#六-用https也不用每次都输入密码" class="headerlink" title="六. 用https也不用每次都输入密码"></a>六. 用https也不用每次都输入密码</h3><p>很多环境下并不能用ssh，所以<code>git clone</code>的时候Clone with SSH也不好使，只能用https协议。用https协议在每次提交的时候，都要手动输入用户名和密码。所以修改本地repository下的git配置文件。<br>修改前：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[core]</span><br><span class="line">        repositoryformatversion = 0</span><br><span class="line">        filemode = false</span><br><span class="line">        bare = false</span><br><span class="line">        logallrefupdates = true</span><br><span class="line">        symlinks = false</span><br><span class="line">        ignorecase = true</span><br><span class="line">        hideDotFiles = dotGitOnly</span><br><span class="line">[remote &quot;origin&quot;]</span><br><span class="line">        url = https://github.com/chenbuer/chenbuer.github.io.git</span><br><span class="line">        fetch = +refs/heads/*:refs/remotes/origin/*</span><br><span class="line">[branch &quot;master&quot;]</span><br><span class="line">        remote = origin</span><br><span class="line">        merge = refs/heads/master</span><br><span class="line">[branch &quot;hexo&quot;]</span><br><span class="line">        remote = origin</span><br><span class="line">        merge = refs/heads/hexo</span><br></pre></td></tr></table></figure><p>修改之后：<br><img src="https://github.com/chenbuer/markdownImgs/blob/master/blog/modGitCfg.png?raw=true" alt="modGitCfg"></p><h3 id="七、本地添加github远程"><a href="#七、本地添加github远程" class="headerlink" title="七、本地添加github远程"></a>七、本地添加github远程</h3><p>首先需要在github上添加repo为test，然后在本地项目下执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git remote add origin https://github.com/chenbuer/test //关联远程仓库</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> GIT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tomcat应用技巧</title>
      <link href="/2017/04/09/tomcat%E5%BA%94%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
      <url>/2017/04/09/tomcat%E5%BA%94%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<p>这篇文章介绍了：</p><ul><li>URL中去掉项目名</li><li>URL中携带中文避免乱码</li></ul><h3 id="一、URL中去掉项目名"><a href="#一、URL中去掉项目名" class="headerlink" title="一、URL中去掉项目名"></a>一、URL中去掉项目名</h3><p>部署一个项目到tomcat中的，在server.xml中会增加一行记录，如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Context</span> <span class="attr">docBase</span>=<span class="string">&quot;blog&quot;</span> <span class="attr">path</span>=<span class="string">&quot;/blog&quot;</span> <span class="attr">reloadable</span>=<span class="string">&quot;true&quot;</span> <span class="attr">source</span>=<span class="string">&quot;org.eclipse.jst.j2ee.server:blog&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">Host</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后我们本地访问这个项目的时候需要输入的URL如下：</p><span id="more"></span><blockquote><p><a href="http://localhost:8080/blog">http://localhost:8080/blog</a><br>但是我们实际部署到的时候，一般是这样的：<br><a href="http://www.chenbuer.com/">http://www.chenbuer.com/</a><br>只有域名，而没有多余的路径（也就是上面的项目名）。那么在编码的时候如何去掉这样的项目名，使得编码的时候与实际部署的时候没有区别，操作如下：<br>将server.xml中的Content标签改为如下（<strong>去掉的path中的值</strong>）:</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Context</span> <span class="attr">docBase</span>=<span class="string">&quot;blog&quot;</span> <span class="attr">path</span>=<span class="string">&quot;/&quot;</span> <span class="attr">reloadable</span>=<span class="string">&quot;true&quot;</span> <span class="attr">source</span>=<span class="string">&quot;org.eclipse.jst.j2ee.server:blog&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">Host</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="二、URL中携带中文避免乱码"><a href="#二、URL中携带中文避免乱码" class="headerlink" title="二、URL中携带中文避免乱码"></a>二、URL中携带中文避免乱码</h3><p>在server.xml中的Connector中添加<strong>URIEncoding&#x3D;”UTF-8”</strong>(一定要注意不是<strong>URLIEncoding&#x3D;”UTF-8”</strong>)，变为如下:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">URIEncoding</span>=<span class="string">&quot;UTF-8&quot;</span> <span class="attr">connectionTimeout</span>=<span class="string">&quot;20000&quot;</span> <span class="attr">port</span>=<span class="string">&quot;8080&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;HTTP/1.1&quot;</span> <span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> tomcat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jsp添加jstl库</title>
      <link href="/2017/04/06/jsp%E6%B7%BB%E5%8A%A0jstl%E5%BA%93/"/>
      <url>/2017/04/06/jsp%E6%B7%BB%E5%8A%A0jstl%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<p>一、在pom.xml中添加依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 添加jtl支持 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><span id="more"></span><p>二、在需要利用的地方需要加上标签<br>&lt;%@ taglib prefix&#x3D;”c”<br>           uri&#x3D;”<a href="http://java.sun.com/jsp/jstl/core">http://java.sun.com/jsp/jstl/core</a>“ %&gt;<br>三、具体利用方法可以参考<a href="http://www.runoob.com/jsp/jsp-jstl.html">jsp常用用法</a></p>]]></content>
      
      
      <categories>
          
          <category> JAVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springMVC初体验</title>
      <link href="/2017/03/27/springMVC%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
      <url>/2017/03/27/springMVC%E5%88%9D%E4%BD%93%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<p>主要包含了:</p><ul><li>springMVC第一个控制器</li><li>springMVC与Mybatis整合时一些常用的配置文件<ul><li>web.xml</li><li>spring的beans配置文件</li><li>springMVC的配置文件</li><li>Mybatis配置文件</li><li>log4j的配置文件</li></ul></li><li>替代@Response的工具类</li><li>用@service和@Resource定义bean和使用bean<span id="more"></span></li></ul><h3 id="一、springMVC第一个控制器"><a href="#一、springMVC第一个控制器" class="headerlink" title="一、springMVC第一个控制器"></a>一、springMVC第一个控制器</h3><ol><li><p>web.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee </span></span></span><br><span class="line"><span class="string"><span class="tag">    http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">id</span>=<span class="string">&quot;WebApp_ID&quot;</span> <span class="attr">version</span>=<span class="string">&quot;3.1&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>springMVC3<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.htm<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>/WEB-INF/HelloWorld-servlet.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>HelloWorld<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>/WEB-INF/HelloWorld-servlet.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>HelloWorld<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>HelloWorld-servlet.xml</p></li></ol><p>这个创建很重要，用myeclipse创建，创建spring Bean的xml文件，选择desired XSD namespace declarations：beans、context、mvc。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;info.baitian.web.controller&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span></span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/jsp/&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>HelloWorld.java<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> info.baitian.web.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.ModelMap;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorldController</span>&#123; </span><br><span class="line">    <span class="meta">@RequestMapping(method=RequestMethod.GET)</span></span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">printHello</span><span class="params">(ModelMap model)</span> &#123;</span><br><span class="line">      model.addAttribute(<span class="string">&quot;message&quot;</span>, <span class="string">&quot;Hello Spring MVC Framework!&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>hello.jsp<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=&quot;text/html; charset=UTF-8&quot; %&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">h2</span>&gt;</span>$&#123;message&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="二、springMVC与Mybatis整合时一些常用的配置文件"><a href="#二、springMVC与Mybatis整合时一些常用的配置文件" class="headerlink" title="二、springMVC与Mybatis整合时一些常用的配置文件"></a>二、springMVC与Mybatis整合时一些常用的配置文件</h3><p>主要介绍的配置文件有：</p><ul><li>web.xml</li><li>spring的beans配置文件</li><li>springMVC的配置文件</li><li>Mybatis配置文件</li><li>log4j的配置文件</li></ul><ol><li><p>web.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns</span>=<span class="string">&quot;http://java.sun.com/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">id</span>=<span class="string">&quot;WebApp_ID&quot;</span> <span class="attr">version</span>=<span class="string">&quot;2.5&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">display-name</span>&gt;</span>MyBatisPro05<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Spring配置文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:applicationContext.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 编码过滤器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">async-supported</span>&gt;</span>true<span class="tag">&lt;/<span class="name">async-supported</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Spring监听器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 添加对springmvc的支持 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:spring-mvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">async-supported</span>&gt;</span>true<span class="tag">&lt;/<span class="name">async-supported</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.do<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>spring配置文件applicationContext.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span>    </span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span>    </span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>   </span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:p</span>=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span>  </span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span>   </span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span>  </span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:jee</span>=<span class="string">&quot;http://www.springframework.org/schema/jee&quot;</span>  </span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span>  </span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;    </span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd  </span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  </span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd  </span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd  </span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd&quot;</span>&gt;</span>    </span><br><span class="line">        </span><br><span class="line"><span class="comment">&lt;!-- 自动扫描 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.java1234.dao&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.java1234.service&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 配置数据源 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DriverManagerDataSource&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/db_mybatis&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 配置mybatis的sqlSessionFactory --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 自动扫描mappers.xml文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;mapperLocations&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:com/java1234/mappers/*.xml&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mybatis配置文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;configLocation&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:mybatis-config.xml&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- DAO接口所在包名，Spring会自动查找其下的类 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;basePackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.java1234.dao&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sqlSessionFactoryBeanName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;sqlSessionFactory&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- (事务管理)transaction manager, use JtaTransactionManager for global tx --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 配置事务通知属性 --&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">&quot;txAdvice&quot;</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span>&gt;</span>  </span><br><span class="line">        <span class="comment">&lt;!-- 定义事务传播属性 --&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;insert*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span> /&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;update*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span> /&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;edit*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span> /&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;save*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span> /&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;add*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span> /&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;new*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span> /&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;set*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span> /&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;remove*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span> /&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;delete*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span> /&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;change*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span> /&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;get*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span> <span class="attr">read-only</span>=<span class="string">&quot;true&quot;</span> /&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;find*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span> <span class="attr">read-only</span>=<span class="string">&quot;true&quot;</span> /&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;load*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span> <span class="attr">read-only</span>=<span class="string">&quot;true&quot;</span> /&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;*&quot;</span> <span class="attr">propagation</span>=<span class="string">&quot;REQUIRED&quot;</span> <span class="attr">read-only</span>=<span class="string">&quot;true&quot;</span> /&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span>  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">&lt;!-- 配置事务切面 --&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;serviceOperation&quot;</span>  </span></span><br><span class="line"><span class="tag">            <span class="attr">expression</span>=<span class="string">&quot;execution(* com.java1234.service.*.*(..))&quot;</span> /&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">&quot;txAdvice&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;serviceOperation&quot;</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span>  </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>sringMVC配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span>    </span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span>    </span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>   </span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:p</span>=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span>  </span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span>   </span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span>  </span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:jee</span>=<span class="string">&quot;http://www.springframework.org/schema/jee&quot;</span>  </span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span>  </span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;    </span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd  </span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  </span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd  </span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd  </span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd&quot;</span>&gt;</span>    </span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 使用注解的包，包括子集 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.java1234.controller&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 视图解析器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;viewResolver&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span>  </span><br></pre></td></tr></table></figure></li><li><p>mybatis的配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta"><span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta"><span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 别名 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.java1234.entity&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>log4j配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">log4j.rootLogger=info,appender1,appender2</span><br><span class="line"></span><br><span class="line">log4j.appender.appender1=org.apache.log4j.ConsoleAppender </span><br><span class="line"></span><br><span class="line">log4j.appender.appender2=org.apache.log4j.FileAppender </span><br><span class="line">log4j.appender.appender2.File=C:/logFile.txt</span><br><span class="line"> </span><br><span class="line">log4j.appender.appender1.layout=org.apache.log4j.TTCCLayout</span><br><span class="line">log4j.appender.appender2.layout=org.apache.log4j.TTCCLayout  </span><br></pre></td></tr></table></figure></li></ol><h3 id="三、替代-Response的工具类"><a href="#三、替代-Response的工具类" class="headerlink" title="三、替代@Response的工具类"></a>三、替代@Response的工具类</h3><blockquote><p>因为使用@Response会出现中文乱码的情况，所以可以用一个工具类：</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ResponseUtil</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">write</span><span class="params">(HttpServletResponse response, Object obj)</span><span class="keyword">throws</span> Exception&#123;</span><br><span class="line">response.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> response.getWriter();</span><br><span class="line">out.println(obj.toString());</span><br><span class="line">out.flush();</span><br><span class="line">out.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="四、用-service和-Resource定义bean和使用bean"><a href="#四、用-service和-Resource定义bean和使用bean" class="headerlink" title="四、用@service和@Resource定义bean和使用bean"></a>四、用@service和@Resource定义bean和使用bean</h3><blockquote><p>在service层定义一个service类，用注释@Service；在利用这个bean的时候用@Resource表示：</p></blockquote><p>举例如下：</p><ol><li><p>在service层定义这个bean</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.chenbuer.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.chenbuer.service.UserService;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * UserService的实现类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service(&quot;userService&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>在controller层使用这个bean</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.chenbuer.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.chenbuer.service.UserService;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户controller层</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Resource</span></span><br><span class="line"><span class="keyword">private</span> UserService userService;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> JAVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mycat初体验</title>
      <link href="/2017/03/13/Mycat%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
      <url>/2017/03/13/Mycat%E5%88%9D%E4%BD%93%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<h3 id="一、Mycat的schema-xml的配置"><a href="#一、Mycat的schema-xml的配置" class="headerlink" title="一、Mycat的schema.xml的配置"></a>一、Mycat的schema.xml的配置</h3><p><a href="https://www.jianshu.com/p/26513f428ecf">Mycat配置</a></p><span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JAVA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu14.04 配置apache2虚拟主机</title>
      <link href="/2017/03/01/ubuntu14-04-%E9%85%8D%E7%BD%AEapache2%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA/"/>
      <url>/2017/03/01/ubuntu14-04-%E9%85%8D%E7%BD%AEapache2%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA/</url>
      
        <content type="html"><![CDATA[<p>在很多的教程中告诉我们设置apache的虚拟主机都是配置apache配置文件，但是在ubuntu14.04中按照一些教程配置，并不一定能够成功。下面简单介绍一下在ubuntu14.04下配置apache的虚拟主机。</p><ul><li>到&#x2F;etc&#x2F;apache2&#x2F;sites-available&#x2F;拷贝一份原来的default的配置文件：<br><code>cp default-ssl.conf www.local.conf</code></li><li>配置一下新的虚拟主机www的配置文件，由于较多，就附在最后面</li><li>启动这个虚拟主机。其实就是在&#x2F;etc&#x2F;apache2&#x2F;sites-enabled中添加一个www的虚拟主机的软连接：<br><code>sudo a2ensite www.local.conf</code></li><li>开启复写。【需要注意的是，开启复写不仅仅是上面一行代码那么简单，需要在www虚拟主机的配置文件中加上部分复写的配置，可以参考下面的www虚拟主机的配置文件】</li><li>重启apache服务。<br><code>sudo service apache2 restart</code><span id="more"></span></li></ul><hr><p>下面是www虚拟主机的配置文件：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">VirtualHost</span> *<span class="attr">:80</span>&gt;</span></span><br><span class="line"> # The ServerName directive sets the request scheme, hostname and port that</span><br><span class="line"> # the server uses to identify itself. This is used when creating</span><br><span class="line"> # redirection URLs. In the context of virtual hosts, the ServerName</span><br><span class="line"> # specifies what hostname must appear in the request&#x27;s Host: header to</span><br><span class="line"> # match this virtual host. For the default virtual host (this file) this</span><br><span class="line"> # value is not decisive as it is used as a last resort host regardless.</span><br><span class="line"> # However, you must set it for any further virtual host explicitly.</span><br><span class="line"> #ServerName www.example.com</span><br><span class="line"></span><br><span class="line"> ServerAdmin webmaster@localhost</span><br><span class="line"> ServerName www.baitian.info</span><br><span class="line"> ServerAlias www.baitian.info</span><br><span class="line"> DocumentRoot /path/to/your/wwwRoot</span><br><span class="line"></span><br><span class="line"> # Available loglevels: trace8, ..., trace1, debug, info, notice, warn,</span><br><span class="line"> # error, crit, alert, emerg.</span><br><span class="line"> # It is also possible to configure the loglevel for particular</span><br><span class="line"> # modules, e.g.</span><br><span class="line"> #LogLevel info ssl:warn</span><br><span class="line"></span><br><span class="line"> ErrorLog $&#123;APACHE_LOG_DIR&#125;/error.log</span><br><span class="line"> CustomLog $&#123;APACHE_LOG_DIR&#125;/access.log combined</span><br><span class="line"> <span class="tag">&lt;<span class="name">Directory</span> /<span class="attr">path</span>/<span class="attr">to</span>/<span class="attr">your</span>/<span class="attr">wwwRoot</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"> Options Indexes FollowSymLinks</span><br><span class="line"> </span><br><span class="line"> AllowOverride ALL</span><br><span class="line"> </span><br><span class="line"> Require all granted</span><br><span class="line"> </span><br><span class="line"> <span class="tag">&lt;/<span class="name">Directory</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> # For most configuration files from conf-available/, which are</span><br><span class="line"> # enabled or disabled at a global level, it is possible to</span><br><span class="line"> # include a line for only one particular virtual host. For example the</span><br><span class="line"> # following line enables the CGI configuration for this host only</span><br><span class="line"> # after it has been globally disabled with &quot;a2disconf&quot;.</span><br><span class="line"> #Include conf-available/serve-cgi-bin.conf</span><br><span class="line"><span class="tag">&lt;/<span class="name">VirtualHost</span>&gt;</span></span><br><span class="line"></span><br><span class="line"># vim: syntax=apache ts=4 sw=4 sts=4 sr noet</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> apache2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>yii2-tree-manager无法正常增加/修改节点</title>
      <link href="/2017/03/01/yii2-tree-manager%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E5%A2%9E%E5%8A%A0-%E4%BF%AE%E6%94%B9%E8%8A%82%E7%82%B9/"/>
      <url>/2017/03/01/yii2-tree-manager%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E5%A2%9E%E5%8A%A0-%E4%BF%AE%E6%94%B9%E8%8A%82%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<p>这个问题是因为treemanager使用的model是我用gii创造的，所以会有问题，可以参考<a href="https://github.com/kartik-v/yii2-tree-manager/issues/61">github上的讨论</a>。</p><span id="more"></span><p>将rules简单修改后如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">rules</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> [</span><br><span class="line">    <span class="comment">// [[&#x27;root&#x27;, &#x27;lft&#x27;, &#x27;rgt&#x27;, &#x27;lvl&#x27;, &#x27;icon_type&#x27;, &#x27;active&#x27;, &#x27;selected&#x27;, &#x27;disabled&#x27;, &#x27;readonly&#x27;, &#x27;visible&#x27;, &#x27;collapsed&#x27;, &#x27;movable_u&#x27;, &#x27;movable_d&#x27;, &#x27;movable_l&#x27;, &#x27;movable_r&#x27;, &#x27;removable&#x27;, &#x27;removable_all&#x27;], &#x27;safe&#x27;],</span></span><br><span class="line">    <span class="comment">// [[&#x27;lft&#x27;, &#x27;rgt&#x27;, &#x27;lvl&#x27;, &#x27;name&#x27;], &#x27;safe&#x27;],</span></span><br><span class="line">    [[<span class="string">&#x27;content&#x27;</span>], <span class="string">&#x27;safe&#x27;</span>],</span><br><span class="line">    [[<span class="string">&#x27;id&#x27;</span>],<span class="string">&#x27;safe&#x27;</span>],</span><br><span class="line">    [[<span class="string">&#x27;name&#x27;</span>], <span class="string">&#x27;string&#x27;</span>, <span class="string">&#x27;max&#x27;</span> =&gt; <span class="number">60</span>],</span><br><span class="line">    [[<span class="string">&#x27;icon&#x27;</span>], <span class="string">&#x27;string&#x27;</span>, <span class="string">&#x27;max&#x27;</span> =&gt; <span class="number">255</span>]</span><br><span class="line"> ];</span><br><span class="line">&#125;</span><br><span class="line">由于对于我来说，这个模型必须要在rules中的有id（唯一索引）、content（文章内容）、name（文章标题），这样才能正常进行增删查改。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> yii2-tree-manager </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Struts2配置文件</title>
      <link href="/2017/03/01/struts2%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
      <url>/2017/03/01/struts2%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h4 id="一、web-xml"><a href="#一、web-xml" class="headerlink" title="一、web.xml"></a>一、web.xml</h4><p>路径为webRoot&#x2F;WEB-INF：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://java.sun.com/xml/ns/javaee&quot;</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd&quot;</span> <span class="attr">version</span>=<span class="string">&quot;3.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>hw<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><span id="more"></span><h4 id="二、struts-xml"><a href="#二、struts-xml" class="headerlink" title="二、struts.xml"></a>二、struts.xml</h4><p>位于src目录下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">struts</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//Apache Software Foundation//DTD Struts Configuration 2.1//EN&quot;</span> <span class="string">&quot;http://struts.apache.org/dtds/struts-2.1.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">struts</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 包含多个配置文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">file</span>=<span class="string">&quot;file1.xml&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;default&quot;</span> <span class="attr">namespace</span>=<span class="string">&quot;/&quot;</span> <span class="attr">extends</span>=<span class="string">&quot;struts-default&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 这个必须放到第一行 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">default-action-ref</span> <span class="attr">name</span>=<span class="string">&quot;error&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">default-action-ref</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;helloworld&quot;</span> <span class="attr">class</span>=<span class="string">&quot;info.baitian.action.HelloWorld&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">result</span>&gt;</span>/result.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">           </span><br><span class="line">           <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;love&quot;</span> <span class="attr">method</span>=<span class="string">&quot;love&quot;</span> <span class="attr">class</span>=<span class="string">&quot;info.baitian.action.HelloWorld&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;error&quot;</span>&gt;</span>/love.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">           </span><br><span class="line">           <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;error&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">result</span>&gt;</span>/error.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">struts</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JAVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> struts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>eclipse与myEclipse</title>
      <link href="/2017/03/01/eclipse%E4%B8%8EmyEclipse/"/>
      <url>/2017/03/01/eclipse%E4%B8%8EmyEclipse/</url>
      
        <content type="html"><![CDATA[<h3 id="一、eclipse添加了tomcat启动成功但404"><a href="#一、eclipse添加了tomcat启动成功但404" class="headerlink" title="一、eclipse添加了tomcat启动成功但404"></a>一、eclipse添加了tomcat启动成功但404</h3><blockquote><p>需要修改一下，具体如下：</p></blockquote><span id="more"></span><ol><li>remove server里面的所有项目</li><li>clean一下server</li><li>双击server，出现了server的配置项</li><li>ServerLocations选择第二个：Use Tomcat installation(takes control of Tomcat installation)</li><li>deploy path改成webapps</li><li>ServerPath改成安装的tomcat的安装目</li></ol><h3 id="二、myeclipse设置代理"><a href="#二、myeclipse设置代理" class="headerlink" title="二、myeclipse设置代理"></a>二、myeclipse设置代理</h3><p><code>window--&gt;preferences--&gt;general--&gt;network connections 选中 manual proxy configuration</code><br>由于我安装了goagent，所以我设置http和https代理全为127.0.0.1:8087</p><p>这样我安装软件只要在：</p><p><code>help-&gt;install from Catalog</code>就OK了</p><h3 id="三、myeclipse默认不把src下面的java文件编译到classes中"><a href="#三、myeclipse默认不把src下面的java文件编译到classes中" class="headerlink" title="三、myeclipse默认不把src下面的java文件编译到classes中"></a>三、myeclipse默认不把src下面的java文件编译到classes中</h3><p>需要确保project-&gt;build automatically 已经被选上.<br>可以参考<a href="http://blog.csdn.net/coolwubo/article/details/9612545">这篇文章</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JAVA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>事务与spring的事务管理</title>
      <link href="/2017/02/28/%E4%BA%8B%E5%8A%A1%E4%B8%8Espring%E7%9A%84%E4%BA%8B%E5%8A%A1%E7%AE%A1%E7%90%86/"/>
      <url>/2017/02/28/%E4%BA%8B%E5%8A%A1%E4%B8%8Espring%E7%9A%84%E4%BA%8B%E5%8A%A1%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>理解了spring的事务管理，必须要理解事务以及AOP，当然DI是基础，这样也就深刻理解了spring了。</p><h3 id="一、事务的隔离级别"><a href="#一、事务的隔离级别" class="headerlink" title="一、事务的隔离级别"></a>一、事务的隔离级别</h3><p>可以参考<a href="http://www.ibm.com/developerworks/cn/education/opensource/os-cn-spring-trans/index.html">这篇文章</a>，对事务还是有不错的解释，但是讲解spring事务管理有点不清晰，简单的spring事务管理配置可以参考<a href="http://blog.csdn.net/bjyfb/article/details/8705684">这篇文章</a>。</p><ol><li>TransactionDefinition.ISOLATION_DEFAULT：这是默认值，表示使用底层数据库的默认隔离级别。对大部分数据库而言，通常这值就是TransactionDefinition.ISOLATION_READ_COMMITTED。</li><li>TransactionDefinition.ISOLATION_READ_UNCOMMITTED：该隔离级别表示一个事务可以读取另一个事务修改但还没有提交的数据。该级别不能防止脏读和不可重复读，因此很少使用该隔离级别。<span id="more"></span></li><li>TransactionDefinition.ISOLATION_READ_COMMITTED：该隔离级别表示一个事务只能读取另一个事务已经提交的数据。该级别可以防止脏读，这也是大多数情况下的推荐值。</li><li>TransactionDefinition.ISOLATION_REPEATABLE_READ：该隔离级别表示一个事务在整个过程中可以多次重复执行某个查询，并且每次返回的记录都相同。即使在多次查询之间有新增的数据满足该查询，这些新增的记录也会被忽略。该级别可以防止脏读和不可重复读。</li><li>TransactionDefinition.ISOLATION_SERIALIZABLE：所有的事务依次逐个执行，这样事务之间就完全不可能产生干扰，也就是说，该级别可以防止脏读、不可重复读以及幻读。但是这将严重影响程序的性能。通常情况下也不会用到该级别。</li></ol><p>其中<code>ISOLATION_READ_COMMITTED</code>解决了脏读的问题，但是不能解决不可重复读的问题，<code>ISOLATION_REPEATABLE_READ</code>解决了不可重复读的问题，但是没有解决幻度的问题，<code>ISOLATION_SERIALIZABLE</code>解决了幻读的问题。</p><h3 id="二、事务传播行为"><a href="#二、事务传播行为" class="headerlink" title="二、事务传播行为"></a>二、事务传播行为</h3><p>所谓事务的传播行为是指，如果在开始当前事务之前，一个事务上下文已经存在，此时有若干选项可以指定一个事务性方法的执行行为。在TransactionDefinition定义中包括了如下几个表示传播行为的常量：</p><ol><li>TransactionDefinition.PROPAGATION_REQUIRED：如果当前存在事务，则加入该事务；如果当前没有事务，则创建一个新的事务。</li><li>TransactionDefinition.PROPAGATION_REQUIRES_NEW：创建一个新的事务，如果当前存在事务，则把当前事务挂起。</li><li>TransactionDefinition.PROPAGATION_SUPPORTS：如果当前存在事务，则加入该事务；如果当前没有事务，则以非事务的方式继续运行。</li><li>TransactionDefinition.PROPAGATION_NOT_SUPPORTED：以非事务方式运行，如果当前存在事务，则把当前事务挂起。</li><li>TransactionDefinition.PROPAGATION_NEVER：以非事务方式运行，如果当前存在事务，则抛出异常。</li><li>TransactionDefinition.PROPAGATION_MANDATORY：如果当前存在事务，则加入该事务；如果当前没有事务，则抛出异常。</li><li>TransactionDefinition.PROPAGATION_NESTED：如果当前存在事务，则创建一个事务作为当前事务的嵌套事务来运行；如果当前没有事务，则该取值等价于TransactionDefinition.PROPAGATION_REQUIRED。</li></ol>]]></content>
      
      
      <categories>
          
          <category> JAVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring </tag>
            
            <tag> hibernate </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>maven初体验</title>
      <link href="/2017/02/16/maven%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
      <url>/2017/02/16/maven%E5%88%9D%E4%BD%93%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<ol><li>maven配置(本地仓库配置和本地设置、以及在eclipse中的配置)</li></ol><p>下载完成之后，创建环境变量<code>M2_HOME=E:\apache-maven-3.3.9</code>也就是指向安装目录。在path环境变量中添加<code>%M2_HOME%\bin</code>也就是指向安装目录。在path环境变量中添加<br>在eclipse中Window-&gt;Preference-&gt;Maven4MyEclipse中设置Installationsd到达安装目录，User Settins中设置配置文件在<code>E:\maven-repo\settings.xml</code></p><span id="more"></span><ol start="2"><li>错误<code>-Dmaven.multiModuleProjectDirectory maven myeclipse</code></li></ol><p>或者说是错误<code>Check $M2_HOME environment variable and mvn script match. </code>，解决方法是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">可以设一个环境变量M2_HOME指向你的maven安装目录</span><br><span class="line">M2_HOME=D:\Apps\apache-maven-3.3.1</span><br><span class="line">然后在Window-&gt;Preference-&gt;Java-&gt;Installed JREs-&gt;Edit</span><br><span class="line">在Default VM arguments中设置</span><br><span class="line">-Dmaven.multiModuleProjectDirectory=$M2_HOME</span><br></pre></td></tr></table></figure><p>具体可以<a href="http://fxb4632242.iteye.com/blog/2193945">参考路径</a><br>在这个路径下还有的关于<a href="http://panyongzheng.iteye.com/blog/2200514">创建maven工程</a>的方法</p><ol start="3"><li><p><a href="http://blog.csdn.net/whh743/article/details/53579668">修改maven中央仓库的方法</a></p></li><li><p><code>mvn install</code>报错：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[ERROR] Failure executing javac, but could not parse the error:</span><br><span class="line">[ERROR] javac: 无效的目标版本： 1.7</span><br></pre></td></tr></table></figure><p>原因本地path下配置的是jdk1.6，但是pom中配置的jdk1.7：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><p>将其中的source和target标签改成1.6就行了。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> JAVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>静态网页</title>
      <link href="/2017/02/13/%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B5/"/>
      <url>/2017/02/13/%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B5/</url>
      
        <content type="html"><![CDATA[<h3 id="一、添加categories、tags和about"><a href="#一、添加categories、tags和about" class="headerlink" title="一、添加categories、tags和about"></a>一、添加categories、tags和about</h3><p>在直接利用hexo和<a href="https://github.com/wzpan/hexo-theme-freemind">freemind</a>生成博客之后，点击categories、tags和about三个都是404的，</p><ol><li><p>categories和tags的生成方法是（参考<a href="https://github.com/wzpan/hexo-theme-freemind/issues/16">categories和tags页面生成方法</a>）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1.manually create <span class="built_in">source</span>/categories/index.html and <span class="built_in">paste</span> the following contents：</span><br><span class="line"></span><br><span class="line">title: Categories</span><br><span class="line">layout: categories</span><br><span class="line">---</span><br><span class="line">2.manually create <span class="built_in">source</span>/tags/index.html and <span class="built_in">paste</span> the following contents：</span><br><span class="line"></span><br><span class="line">title: Tags</span><br><span class="line">layout: tags</span><br><span class="line">---</span><br><span class="line">3.restart hexo and refresh the browser</span><br></pre></td></tr></table></figure><span id="more"></span></li><li><p>about页面有一个方法，应该也可以像上面一样手动创建(参考<a href="https://segmentfault.com/q/1010000000618915/a-1020000000752865">about页面的生成方法</a>)：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;about&quot;</span></span><br></pre></td></tr></table></figure><p>当然，这个只是限于about页面的生成（参考<a href="issue:https://github.com/wzpan/hexo-theme-freemind/issues/24">github中issue讨论</a>）</p></li><li><p>若是想要categories页面也可以正常显示东西，需要在文章的开头书写格式为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 添加categories、tags和about</span><br><span class="line"><span class="built_in">date</span>: 2017-02-13 21:50:13</span><br><span class="line">categories: 静态网页</span><br><span class="line">tags: hexo</span><br><span class="line">---</span><br></pre></td></tr></table></figure></li></ol><h3 id="二、修改本地hexo-server的监听端口"><a href="#二、修改本地hexo-server的监听端口" class="headerlink" title="二、修改本地hexo-server的监听端口"></a>二、修改本地hexo-server的监听端口</h3><p>已经在本地模块中安装了hexo-server，而且也已经运行起来了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">czy@czy-PC MINGW64 /e/hexo (hexo)</span><br><span class="line">$ hexo s</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p>但是打开浏览器<strong>并不能正确的显示页面</strong>，可能是在windows下端口冲突，故修改hexo-server的监听端口（文件路径为<code>node_modules/hexo-server/index.js</code>）：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo.<span class="property">config</span>.<span class="property">server</span> = <span class="title function_">assign</span>(&#123;</span><br><span class="line">  <span class="attr">port</span>: <span class="number">4444</span>,</span><br><span class="line">  <span class="attr">log</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">ip</span>: <span class="string">&#x27;0.0.0.0&#x27;</span>,</span><br><span class="line">  <span class="attr">compress</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">header</span>: <span class="literal">true</span></span><br><span class="line">&#125;, hexo.<span class="property">config</span>.<span class="property">server</span>);</span><br></pre></td></tr></table></figure><p>再次运行就可以正常显示了。<br>在知乎上有<a href="https://www.zhihu.com/question/28847824">这个问题的讨论</a></p><h3 id="三、给pages添加评论功能"><a href="#三、给pages添加评论功能" class="headerlink" title="三、给pages添加评论功能"></a>三、给pages添加评论功能</h3><blockquote><p>最近很多的评论插件都停用了，多说直接停止服务，disqus经常访问不了。所以只能求助GitHub，给了我们新的利器<a href="https://github.com/imsun/gitment">Gitment</a></p></blockquote><p>具体的使用步骤如下：</p><ol><li><p>首先需要在GitHub的OAuth Apps里面注册一个repo<br>这个可以参考gitment的文档，不赘述，也是GitHub OAuth的一般注册方法</p></li><li><p>将Gitment的静态文件配置到文章中<br>我的文件主要是配置在themes-&gt;freemind-&gt;layout-&gt;_partial-&gt;post-&gt;comment.ejs文件中。</p></li></ol><p>【完毕】</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hibernate初体验</title>
      <link href="/2017/02/11/Hibernate%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
      <url>/2017/02/11/Hibernate%E5%88%9D%E4%BD%93%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<h3 id="一、Hibernate的操作流程"><a href="#一、Hibernate的操作流程" class="headerlink" title="一、Hibernate的操作流程"></a>一、Hibernate的操作流程</h3><blockquote><p>在一个测试类中表示如下所示：</p></blockquote><span id="more"></span><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> springMVC5;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> info.baitian.db.Students;    </span><br><span class="line"><span class="keyword">import</span> org.hibernate.Session;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.SessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.Transaction;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.cfg.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.service.ServiceRegistry;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.service.ServiceRegistryBuilder;</span><br><span class="line"><span class="keyword">import</span> org.junit.After;</span><br><span class="line"><span class="keyword">import</span> org.junit.Before;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test; </span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestHibernate</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> SessionFactory sessionFactory;</span><br><span class="line">    <span class="keyword">private</span> Session session;</span><br><span class="line">    <span class="keyword">private</span> Transaction transaction;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">before</span><span class="params">()</span>&#123;</span><br><span class="line">        Configuration cfg=<span class="keyword">new</span> <span class="title class_">Configuration</span>().configure();</span><br><span class="line">        <span class="type">ServiceRegistry</span> <span class="variable">serviceRegistry</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ServiceRegistryBuilder</span>().applySettings(cfg.getProperties()).buildServiceRegistry();</span><br><span class="line">        sessionFactory = cfg.buildSessionFactory(serviceRegistry);</span><br><span class="line">        session=sessionFactory.openSession();</span><br><span class="line">        transaction=session.beginTransaction();</span><br><span class="line">   &#125;</span><br><span class="line">    <span class="meta">@After</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">after</span><span class="params">()</span>&#123;</span><br><span class="line">    transaction.commit();</span><br><span class="line">    session.close();</span><br><span class="line">    sessionFactory.close();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testAdd</span><span class="params">()</span>&#123;</span><br><span class="line">    Students s=<span class="keyword">new</span> <span class="title class_">Students</span>(<span class="string">&quot;buer&quot;</span>);</span><br><span class="line">    session.save(s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br></pre></td></tr></table></figure><h3 id="二、Hibernate与Spring协同工作"><a href="#二、Hibernate与Spring协同工作" class="headerlink" title="二、Hibernate与Spring协同工作"></a>二、Hibernate与Spring协同工作</h3><p>检查发现spring的配置文件<code>applicationContext.xml</code>中有了的数据库的配置，Hibernate的配置文件<code>hibernate.cfg.xml</code>中也配置了数据库信息。<br>其实<code>hibernate.cfg.xml</code>已经不再需要，可以将hibernate配置最为一个bean注入到spring中，为dataSource。再利用dataSource最为一个bean注入到sesssionFactory，并且可以将sessionFactory最为一个bean注入给transaction。</p><p>在spring的配置文件中可以指定hibernate的配置文件（在配置sessionFactory的时候）：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sessionFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean&quot;</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;configLocation&quot;</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>classpath:hibernate/hibernate.cfg.xml<span class="tag">&lt;/<span class="name">value</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;packagesToScan&quot;</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>com.tgb.entity<span class="tag">&lt;/<span class="name">value</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>也可以直接在spring的配置文件中写出来（分别配置datasource和sessionFactory）：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.commons.dbcp.BasicDataSource&quot;</span> <span class="attr">destroy-method</span>=<span class="string">&quot;close&quot;</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;org.gjt.mm.mysql.Driver&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/ssh2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sessionFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.orm.hibernate3.LocalSessionFactoryBean&quot;</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hibernateProperties&quot;</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">props</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;hibernate.dialect&quot;</span>&gt;</span>org.hibernate.dialect.MySQL5Dialect<span class="tag">&lt;/<span class="name">prop</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;hibernate.hbm2ddl.auto&quot;</span>&gt;</span>update<span class="tag">&lt;/<span class="name">prop</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;hibernate.show_sql&quot;</span>&gt;</span>true<span class="tag">&lt;/<span class="name">prop</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">props</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;mappingLocations&quot;</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">list</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>classpath:/com/tgb/entity/User.hbm.xml<span class="tag">&lt;/<span class="name">value</span>&gt;</span>             </span><br><span class="line"><span class="tag">&lt;/<span class="name">list</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span>   </span><br></pre></td></tr></table></figure><p>在spring中一个重要的概念是事务管理器<code>transactionManager</code>，关于事务与事务管理器。</p>]]></content>
      
      
      <categories>
          
          <category> JAVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hibernate </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>久未出门</title>
      <link href="/2017/02/11/%E4%B9%85%E6%9C%AA%E5%87%BA%E9%97%A8/"/>
      <url>/2017/02/11/%E4%B9%85%E6%9C%AA%E5%87%BA%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<p>许久未出门，<br>偶见好多人，<br>拥进人群，<br>撞得胳臂疼，</p><span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> 风月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 风月 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>上帝的本意：二值系统</title>
      <link href="/2011/05/20/%E4%B8%8A%E5%B8%9D%E7%9A%84%E6%9C%AC%E6%84%8F%EF%BC%9A%E4%BA%8C%E5%80%BC%E7%B3%BB%E7%BB%9F/"/>
      <url>/2011/05/20/%E4%B8%8A%E5%B8%9D%E7%9A%84%E6%9C%AC%E6%84%8F%EF%BC%9A%E4%BA%8C%E5%80%BC%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<p>昨天突然有这么一个想法，觉得，大自然赋予我们最原始的数制是二进制的：0和1，而我们人类一开始没有体会到上帝的本意最先创造了十进制。</p><span id="more"></span><p>0和1、好和坏、输入和输出、接受和放弃……应该可以这么说，自然界最简单的系统都是二值的系统。不过，自然界最神奇的就是所有的所有庞大的系统都可以由最简单的二值系统累加而成，像原来发射电报用的时通时断的摩斯电码就能表述任何完整信息，然而我们最熟悉不过的庞大的二值系统就是计算机，这个可以处理巨大运算的机器，就像我们好多的计算机课本封面上写的那一大长串的01代码。</p><p>那我们就要思考了这么简单的0和1就怎么组成了这么强大的系统。不难发现，当我们二值的运算的位数越高我们表达的信息就越多，由此我们的信息就越复杂。就像下面的树所表示的那样：</p><p><img src="https://github.com/chenbuer/markdownImgs/blob/master/blog/binaryPic.png?raw=true" alt="二值系统"></p><p>图一</p><p>再用另一种方式来表达，像下面的表格展示的那样，同样我们只用三位来表示一个稍微简单的系统：</p><p><img src="https://github.com/chenbuer/markdownImgs/blob/master/blog/binaryTable.png?raw=true" alt="二值系统表"></p><p>表一</p><p>可以看见：“d2那一列的数字分别是：00001111；d1那一列的数字分别是：00110011；d0那一列的数字分别是：01010101”。所以说，系统可以由不同频率的二值系统组成。我们把最高位d2经历的时间设为1秒，经历了从0到1和从1到0的两次跳变就是一个周期，那么d2的频率就是1赫兹，d1的频率就是0.5赫兹，d0的频率就是0.25赫兹。所以可以这样认为：系统的复杂度由他的最高频率决定，他的最高频率越高，系统越复杂，反之，系统越简单。这就好比是一个信号，不管什么周期性的信号都可以用不同频率的正玄函数累加而成，信号越复杂，正玄函数最高频率就越高。只不过我把周期的正玄函数换成了01信号，同样是适合的，原来，这一切只是级数的相加而已。</p><p>可以发现，系统的复杂度带来了两个结果：1、系统功能变强了；2、系统的分工更明确了。所以说，一个系统的分工越明确他的功能就越强，这两个命题的相关系数接近1。</p><p>说到这儿，不禁联想到了我们实际生活的社会。原先我们社会的生产力不够强大是因为我们社会的分工不够多样化，我们的分工不够细化。而现今的社会生产力这么强大，是因为我们的社会分工越来越细化，专业方向越来越明确，每个人要做的事情不多，可是很精，由此组成了强大的社会系统。同样把这个理论应用到企业、机关也是合适的。</p><p>再来看看人，一个人就是一个处理器。处理器的位数对应这个人的深度，或者我们可以将图1的位数看成是树的深度。深度越深，这个人就越强大，就越难理解，处理事情的能力就越强。</p><p>这让人遐想啊。可以这样认为，人是一个非常连续的信号，要用数字量来模拟他，取样的周期越短才能越接近，所以人的位数很高，是一个复杂的系统，人是很难研究的，心理学就是很复杂的学科，要考虑的额外因素太多了，因为人的深度太深了。在我看来，自然科学最复杂的学科就是生物了，人文科学最复杂的就是心理学了，而电类相对来说计算机科学是比较复杂的。<br>在说一个应用就是解释什么是理论。通常来说理论就是忽略很多的微小的因素总结出来的结论，所以理论总是这样定义“在理想条件下……”。在灰度图中，低频部分代表的是图像背景，而高频则是图像的轮廓，类比一下，理论就是低频的背景，而高频的就是那些被忽略的高频的部分。理论是在低频滤波器的滤波之后剩下的低频的背景。在此理论这个背景之上，我们添加各种线条就形成不同的图像，就是各种具体的实际情况。那之所以说有些人的理论不准确，有些人的准确，就是说有些滤波器比较理想，把高频部分滤的很干净；有些就是滤波器不理想，还剩余一些痕迹，就像擦黑板没有擦干净，还有一些隐约的线条，写上去的字就显得模糊，这个理论就不好用。那有人要是追根究底问我要是把低频部分也滤掉了只剩下白白的背景那是什么，那我只能装装哲学的告诉你那就是宇宙。</p><p>厚黑教主李宗吾说：西方人把他们的智慧都用在了物理学的研究上，中国人把智慧都用在了人性的研究上。这两样是相通了，相比较而言，中国人研究的系统要比西方人研究的复杂的多。</p><p>说到这儿，联想到中国的八卦。“太极生两仪，两仪生四象，四象生八卦”。早在几千年前中国的智者就说出了这样的道理。</p>]]></content>
      
      
      <categories>
          
          <category> 风月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 风月 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
